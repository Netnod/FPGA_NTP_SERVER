<?xml version="1.0" encoding="UTF-8"?>
<spirit:component xmlns:xilinx="http://www.xilinx.com" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <spirit:vendor>xilinx.com</spirit:vendor>
  <spirit:library>customized_ip</spirit:library>
  <spirit:name>ntps_top_axi_pcie3_0_0_pcie3_ip</spirit:name>
  <spirit:version>1.0</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>m_axis_cq</spirit:name>
      <spirit:displayName>m_axis_cq</spirit:displayName>
      <spirit:description>The Completer Reqeust interface is used to transmit Completion TLP&apos;s to the Client Application</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TKEEP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tkeep</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_cq_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>TDATA_NUM_BYTES</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.TDATA_NUM_BYTES">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TDEST_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.TDEST_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.TID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.TUSER_WIDTH">85</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TREADY</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.HAS_TREADY">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.HAS_TSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TKEEP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.HAS_TKEEP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TLAST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.HAS_TLAST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>LAYERED_METADATA</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.LAYERED_METADATA">undef</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.M_AXIS_CQ.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>s_axis_cc</spirit:name>
      <spirit:displayName>s_axis_cc</spirit:displayName>
      <spirit:description>The Completer Completion Interface is used to transmit Completion TLP&apos;s</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TKEEP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tkeep</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_cc_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>TDATA_NUM_BYTES</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.TDATA_NUM_BYTES">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TDEST_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.TDEST_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.TID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.TUSER_WIDTH">33</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TREADY</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.HAS_TREADY">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.HAS_TSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TKEEP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.HAS_TKEEP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TLAST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.HAS_TLAST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>LAYERED_METADATA</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.LAYERED_METADATA">undef</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.S_AXIS_CC.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>s_axis_rq</spirit:name>
      <spirit:displayName>s_axis_rq</spirit:displayName>
      <spirit:description>The Requestor Request interface received requests TLP&apos;s from the Client Application</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TKEEP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tkeep</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>s_axis_rq_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>TDATA_NUM_BYTES</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.TDATA_NUM_BYTES">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TDEST_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.TDEST_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.TID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.TUSER_WIDTH">60</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TREADY</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.HAS_TREADY">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.HAS_TSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TKEEP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.HAS_TKEEP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TLAST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.HAS_TLAST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>LAYERED_METADATA</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.LAYERED_METADATA">undef</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.S_AXIS_RQ.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>m_axis_rc</spirit:name>
      <spirit:displayName>m_axis_rc</spirit:displayName>
      <spirit:description>The Requestor Completer interface transmits completions to the client application</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="axis_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TDATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TKEEP</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tkeep</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TLAST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tlast</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TREADY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TUSER</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tuser</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TVALID</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>m_axis_rc_tvalid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>TDATA_NUM_BYTES</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.TDATA_NUM_BYTES">32</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TDEST_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.TDEST_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TID_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.TID_WIDTH">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>TUSER_WIDTH</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.TUSER_WIDTH">75</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TREADY</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.HAS_TREADY">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TSTRB</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.HAS_TSTRB">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TKEEP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.HAS_TKEEP">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>HAS_TLAST</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.HAS_TLAST">1</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>LAYERED_METADATA</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.LAYERED_METADATA">undef</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.M_AXIS_RC.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>icap</spirit:name>
      <spirit:displayName>icap</spirit:displayName>
      <spirit:description>ICAP Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="icap" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="icap_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>clk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>icap_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>csib</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>icap_csib</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>i</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>icap_i</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>o</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>icap_o</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rdwrb</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>icap_rdwrb</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.icap" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) = &quot;TANDEM_PCIE&quot;">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>startup</spirit:name>
      <spirit:displayName>startup</spirit:displayName>
      <spirit:description>STARTUP interafce</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="startup" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="startup_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cfgclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_cfgclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cfgmclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_cfgmclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>clk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>eos</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_eos</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gsr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_gsr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gts</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_gts</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>keyclearb</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_keyclearb</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pack</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_pack</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>preq</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_preq</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>userdoneo</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_usrdoneo</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>usrcclko</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_usrcclko</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>usrclkts</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_usrcclkts</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>usrdonets</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>startup_usrdonets</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.startup" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie_7x_mgt</spirit:name>
      <spirit:displayName>pcie_7x_mgt</spirit:displayName>
      <spirit:description>PCIExpress Serial Link Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_7x_mgt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_7x_mgt_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxn</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pci_exp_rxn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxp</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pci_exp_rxp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txn</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pci_exp_txn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txp</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pci_exp_txp</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pipe_clock</spirit:name>
      <spirit:displayName>pipe_clock</spirit:displayName>
      <spirit:description>PCIExpress Enternal PIPE Clock interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pipe_clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pipe_clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dclk_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_dclk_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gen3_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_gen3_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mmcm_lock_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_mmcm_lock_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mmcm_rst_n</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_mmcm_rst_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>oobclk_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_oobclk_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pclk_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_pclk_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pclk_sel_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_pclk_sel_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoutclk_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxoutclk_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoutclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxoutclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxusrclk_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxusrclk_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txoutclk_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_txoutclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>userclk1_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_userclk1_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>userclk2_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_userclk2_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pipe_clock" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>CLK.sys_clk</spirit:name>
      <spirit:displayName>CLK.sys_clk</spirit:displayName>
      <spirit:description>sys_clk interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>sys_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLK.SYS_CLK.FREQ_HZ">100000000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLK.SYS_CLK.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLK.SYS_CLK.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLK.SYS_CLK.ASSOCIATED_BUSIF"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLK.SYS_CLK.ASSOCIATED_RESET"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.CLK.SYS_CLK.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>RST.sys_rst</spirit:name>
      <spirit:displayName>RST.sys_rst</spirit:displayName>
      <spirit:description>sys_rst interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>sys_reset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.RST.SYS_RST.POLARITY">ACTIVE_HIGH</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.RST.SYS_RST.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>CLK.user_clk</spirit:name>
      <spirit:displayName>CLK.user_clk</spirit:displayName>
      <spirit:description>user_clk interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="clock_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CLK</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>user_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_BUSIF</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.CLK.USER_CLK.ASSOCIATED_BUSIF">m_axis_cq:s_axis_cc:s_axis_rq:m_axis_rc</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>FREQ_HZ</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.CLK.USER_CLK.FREQ_HZ">125000000</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSOCIATED_RESET</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.CLK.USER_CLK.ASSOCIATED_RESET">user_reset</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>PHASE</spirit:name>
          <spirit:value spirit:format="float" spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLK.USER_CLK.PHASE">0.000</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>CLK_DOMAIN</spirit:name>
          <spirit:value spirit:resolve="generated" spirit:id="BUSIFPARAM_VALUE.CLK.USER_CLK.CLK_DOMAIN"/>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>none</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.CLK.USER_CLK.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>RST.user_reset</spirit:name>
      <spirit:displayName>RST.user_reset</spirit:displayName>
      <spirit:description>user_reset interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="signal" spirit:name="reset_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RST</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>user_reset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>POLARITY</spirit:name>
          <spirit:value spirit:id="BUSIFPARAM_VALUE.RST.USER_RESET.POLARITY">ACTIVE_HIGH</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>INSERT_VIP</spirit:name>
          <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="BUSIFPARAM_VALUE.RST.USER_RESET.INSERT_VIP">0</spirit:value>
          <spirit:vendorExtensions>
            <xilinx:parameterInfo>
              <xilinx:parameterUsage>simulation.rtl</xilinx:parameterUsage>
            </xilinx:parameterInfo>
          </spirit:vendorExtensions>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_cfg_control</spirit:name>
      <spirit:displayName>pcie3_cfg_control</spirit:displayName>
      <spirit:description>It allows a broad range of information exchange between user application and the core</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_control" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_control_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>config_space_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_config_space_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ds_bus_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ds_bus_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ds_device_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ds_device_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ds_function_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ds_function_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ds_port_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ds_port_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dsn</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_dsn</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_cor_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_cor_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_uncor_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_uncor_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>flr_done</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_flr_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>flr_in_process</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_flr_in_process</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>hot_reset_in</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_hot_reset_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>hot_reset_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_hot_reset_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>link_training_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_link_training_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>per_function_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_per_function_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>per_function_output_request</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_per_function_output_request</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>per_function_update_done</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_per_function_update_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>power_state_change_ack</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_power_state_change_ack</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>power_state_change_interrupt</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_power_state_change_interrupt</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>req_pm_transition_l23_ready</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_req_pm_transition_l23_ready</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>subsys_vend_id</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_subsys_vend_id</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_flr_done</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_flr_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_flr_in_process</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_flr_in_process</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_cfg_control" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_cfg_ext</spirit:name>
      <spirit:displayName>pcie3_cfg_ext</spirit:displayName>
      <spirit:description>Configuration Extend Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_ext" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_ext_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_function_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>read_data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_read_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>read_data_valid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_read_data_valid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>read_received</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_read_received</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>register_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_register_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>write_byte_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_write_byte_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>write_data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_write_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>write_received</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ext_write_received</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_cfg_ext" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_cfg_mesg_tx</spirit:name>
      <spirit:displayName>pcie3_cfg_mesg_tx</spirit:displayName>
      <spirit:description>Configuration Transmit Message Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_mesg_tx" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_mesg_tx_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRANSMIT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_transmit</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRANSMIT_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_transmit_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRANSMIT_DONE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_transmit_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TRANSMIT_TYPE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_transmit_type</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_cfg_mesg_tx" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_cfg_mesg_rcvd</spirit:name>
      <spirit:displayName>pcie3_cfg_mesg_rcvd</spirit:displayName>
      <spirit:description>Configuration Received Message Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msg_received" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msg_received_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>recd</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_received</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>recd_data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_received_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>recd_type</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_msg_received_type</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_cfg_mesg_rcvd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.RCV_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_cfg_status</spirit:name>
      <spirit:displayName>pcie3_cfg_status</spirit:displayName>
      <spirit:description>Configuration Status Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_status" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_status_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cq_np_req</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_cq_np_req</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cq_np_req_count</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_cq_np_req_count</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>current_speed</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_current_speed</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dpa_substate_change</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_dpa_substate_change</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_cor_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_cor_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_fatal_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_fatal_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>err_nonfatal_out</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_err_nonfatal_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_power_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_function_power_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_function_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>link_power_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_link_power_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ltr_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ltr_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ltssm_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_ltssm_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>max_payload</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_max_payload</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>max_read_req</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_max_read_req</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>negotiated_width</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_negotiated_width</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>obff_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_obff_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>phy_link_down</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_phy_link_down</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>phy_link_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_phy_link_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pl_status_change</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_pl_status_change</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rcb_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_rcb_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_seq_num</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_seq_num</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_seq_num_vld</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_seq_num_vld</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_tag</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_tag</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rq_tag_vld</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_rq_tag_vld</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_requester_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_tph_requester_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_st_mode</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_tph_st_mode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_power_state</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_power_state</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_tph_requester_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_tph_requester_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_tph_st_mode</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_vf_tph_st_mode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_cfg_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_per_func_status</spirit:name>
      <spirit:displayName>pcie3_per_func_status</spirit:displayName>
      <spirit:description>Per Function Status Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_per_func_status" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_per_func_status_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>STATUS_CONTROL</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_per_func_status_control</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>STATUS_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_per_func_status_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_per_func_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PER_FUNC_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_transmit_fc</spirit:name>
      <spirit:displayName>pcie3_transmit_fc</spirit:displayName>
      <spirit:description>Transmit Flow Control Interfce</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_transmit_fc" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_transmit_fc_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>npd_av</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_tfc_npd_av</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>nph_av</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_tfc_nph_av</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_transmit_fc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TX_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_user_tph</spirit:name>
      <spirit:displayName>pcie3_user_tph</spirit:displayName>
      <spirit:description>PCIE TPH Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_user_tph" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_user_tph_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_num</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>user_tph_function_num</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>stt_address</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>user_tph_stt_address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>stt_read_data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>user_tph_stt_read_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>stt_read_data_valid</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>user_tph_stt_read_data_valid</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>stt_read_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>user_tph_stt_read_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_user_tph" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie_cfg_fc</spirit:name>
      <spirit:displayName>pcie_cfg_fc</spirit:displayName>
      <spirit:description>Configuration Flow Control INTERFACE</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_cfg_fc" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_cfg_fc_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CPLD</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_cpld</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>CPLH</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_cplh</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>NPD</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_npd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>NPH</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_nph</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PD</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_pd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PH</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_ph</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>SEL</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_fc_sel</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie_cfg_fc" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie_cfg_mgmt</spirit:name>
      <spirit:displayName>pcie_cfg_mgmt</spirit:displayName>
      <spirit:description>PCIE Configuration Management Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_cfg_mgmt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_cfg_mgmt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_addr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>BYTE_EN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_byte_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>READ_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_read_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>READ_EN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_read</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>READ_WRITE_DONE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_read_write_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TYPE1_CFG_REG_ACCESS</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_type1_cfg_reg_access</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WRITE_DATA</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_write_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>WRITE_EN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_mgmt_write</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie_cfg_mgmt" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_cfg_msi</spirit:name>
      <spirit:displayName>pcie3_cfg_msi</spirit:displayName>
      <spirit:description>PCIE MSI interrupt</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msi" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msi_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>attr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_attr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fail</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_fail</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>function_number</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_function_number</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>int_vector</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_int</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mask_update</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_mask_update</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mmenable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_mmenable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pending_status</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_pending_status</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>select</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_select</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>sent</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_sent</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_present</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_tph_present</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_st_tag</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_tph_st_tag</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>tph_type</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_tph_type</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msi_vf_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_cfg_msi" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_cfg_msix</spirit:name>
      <spirit:displayName>pcie3_cfg_msix</spirit:displayName>
      <spirit:description>PCIE MSIx Interrupt</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msix" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_msix_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>address</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>data</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_data</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fail</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_fail</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>int_vector</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_int</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>mask</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_mask</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>sent</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_sent</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_enable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vf_enable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>vf_mask</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_msix_vf_mask</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_cfg_msix" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_cfg_interrupt</spirit:name>
      <spirit:displayName>pcie3_cfg_interrupt</spirit:displayName>
      <spirit:description>PCIE Legacy Interrupt</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_interrupt" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie3_cfg_interrupt_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>INTx_VECTOR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_int</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>PENDING</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_pending</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>SENT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cfg_interrupt_sent</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie_ext_ch_gt</spirit:name>
      <spirit:displayName>pcie_ext_ch_gt</spirit:displayName>
      <spirit:description>channel DRP signals</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="drp" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="drp_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpaddr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpen</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DI</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpdi</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DO</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpdo</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DRDY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drprdy</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DWE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>ext_ch_gt_drpwe</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie_ext_ch_gt" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>transceiver_debug</spirit:name>
      <spirit:displayName>transceiver_debug</spirit:displayName>
      <spirit:description>Transceiver Debug Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie3_7x" spirit:name="transceiver_debug" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie3_7x" spirit:name="transceiver_debug_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cpll_lock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_cpll_lock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_0</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_1</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_2</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_4</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_5</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_6</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_7</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_8</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_8</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>debug_9</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_debug_9</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dmonitorout</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_dmonitorout</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>drp_fsm</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_drp_fsm</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>eyescandataerror</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_eyescandataerror</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gt_ch_drp_rdy</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>gt_ch_drp_rdy</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>loopback</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_loopback</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpll_lock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_qpll_lock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qrst_fsm</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_qrst_fsm</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qrst_idle</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_qrst_idle</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rate_fsm</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rate_fsm</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rate_idle</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rate_idle</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rst_fsm</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rst_fsm</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rst_idle</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rst_idle</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxbufstatus</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxbufstatus</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxcommadet</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxcommadet</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdisperr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxdisperr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxdlysresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxdlysresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxnotintable</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxnotintable</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxphaligndone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxphaligndone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpmaresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxpmaresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbscntreset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxprbscntreset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbserr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxprbserr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxprbssel</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxprbssel</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxstatus</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxstatus</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxsyncdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rxsyncdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>sync_fsm_rx</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_sync_fsm_rx</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>sync_fsm_tx</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_sync_fsm_tx</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdlysresetdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_txdlysresetdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txinhibit</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_txinhibit</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphaligndone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_txphaligndone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txphinitdone</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_txphinitdone</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprbsforceerr</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_txprbsforceerr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txprbssel</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_txprbssel</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.transceiver_debug" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_sharedlogic_int_clk</spirit:name>
      <spirit:displayName>pcie3_sharedlogic_int_clk</spirit:displayName>
      <spirit:description>PCIe3 Shared logic interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_sharedlogic_int_clk" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_sharedlogic_int_clk_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>dclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_dclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>oobclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_oobclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pclk_sel_slave</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_pclk_sel_slave</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pclk_slave</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_pclk_out_slave</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>pipe_rxusrclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_pipe_rxusrclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qplllock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_qplllock_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qplloutclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_qplloutclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qplloutrefclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_qplloutrefclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxoutclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_rxoutclk_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>usrclk1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_userclk1_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>usrclk2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>int_userclk2_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_sharedlogic_int_clk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_qpll_drp</spirit:name>
      <spirit:displayName>pcie3_qpll_drp</spirit:displayName>
      <spirit:description>PCIe Gen3 external gt_common Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_qpll_drp" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_qpll_drp_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>clk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_drp_clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>crscode</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_drp_crscode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>done</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_drp_done</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>fsm</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_drp_fsm</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>gen3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_drp_gen3</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>ovrd</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_drp_ovrd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qplld</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_qplld</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qplllock</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_qplllock</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qplloutclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_qplloutclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qplloutrefclk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_qplloutrefclk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpllreset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_qpllreset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>reset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_drp_reset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rst_n</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_drp_rst_n</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>start</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpll_drp_start</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_qpll_drp" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie_drp</spirit:name>
      <spirit:displayName>pcie_drp</spirit:displayName>
      <spirit:description>PCIE DRP Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="drp" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="drp_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DADDR</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_drp_addr</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DEN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_drp_en</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DI</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_drp_di</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DO</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_drp_do</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DRDY</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_drp_rdy</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>DWE</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pcie_drp_we</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie_drp" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_ext_pipe_rp</spirit:name>
      <spirit:displayName>pcie3_ext_pipe_rp</spirit:displayName>
      <spirit:description>PCIE3 External PIPE Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_ext_pipe" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_ext_pipe_rtl" spirit:version="1.0"/>
      <spirit:master/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>COMMANDS_IN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>COMMANDS_OUT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_ext_pipe_rp" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.DEV_PORT_TYPE&apos;)) = 2)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_ext_pipe_ep</spirit:name>
      <spirit:displayName>pcie3_ext_pipe_ep</spirit:displayName>
      <spirit:description>PCIE3 External PIPE Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_ext_pipe" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_ext_pipe_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>COMMANDS_IN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>COMMANDS_OUT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_ext_pipe_ep" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.DEV_PORT_TYPE&apos;)) = 0)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_ext_pipe_ep_legacy</spirit:name>
      <spirit:displayName>pcie3_ext_pipe_ep_legacy</spirit:displayName>
      <spirit:description>PCIE3 External PIPE Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_ext_pipe" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="interface" spirit:name="pcie_ext_pipe_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>COMMANDS_IN</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_out</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>COMMANDS_OUT</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>common_commands_in</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>RX_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_tx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_0</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_0_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_1</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_1_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_2</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_2_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_3</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_3_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_4</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_4_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_5</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_5_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_6</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_6_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>TX_7</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>pipe_rx_7_sigs</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_ext_pipe_ep_legacy" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.DEV_PORT_TYPE&apos;)) = 1)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>pcie3_powerdown_interface</spirit:name>
      <spirit:displayName>pcie3_powerdown_interface</spirit:displayName>
      <spirit:description>PCIE3 Powerdown Port Interface</spirit:description>
      <spirit:busType spirit:vendor="xilinx.com" spirit:library="display_pcie3_7x" spirit:name="pcie3_powerdown" spirit:version="1.0"/>
      <spirit:abstractionType spirit:vendor="xilinx.com" spirit:library="display_pcie3_7x" spirit:name="pcie3_powerdown_rtl" spirit:version="1.0"/>
      <spirit:slave/>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>cpllpd</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>cpllpd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>powerdown</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>powerdown</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>qpllpd</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>qpllpd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>rxpd</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>rxpd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txdetectrx</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txdetectrx</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txelecidle</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txelecidle</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpd</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txpd</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>txpdelecidlemode</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>txpdelecidlemode</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:vendorExtensions>
        <xilinx:busInterfaceInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="BUSIF_ENABLEMENT.pcie3_powerdown_interface" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.POWER_DOWN&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:busInterfaceInfo>
      </spirit:vendorExtensions>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>xilinx_elaboratesubcores</spirit:name>
        <spirit:displayName>Elaborate Sub-Cores</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:elaborate.subcores</spirit:envIdentifier>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:e2def7b9</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsynthesis</spirit:name>
        <spirit:displayName>Verilog Synthesis</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:synthesis</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsynthesis_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Tue Oct 20 09:21:57 UTC 2020</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:ab6a41c1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_synthesisconstraints</spirit:name>
        <spirit:displayName>Synthesis Constraints</spirit:displayName>
        <spirit:envIdentifier>:vivado.xilinx.com:synthesis.constraints</spirit:envIdentifier>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:ab6a41c1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsynthesiswrapper</spirit:name>
        <spirit:displayName>Verilog Synthesis Wrapper</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:synthesis.wrapper</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>ntps_top_axi_pcie3_0_0_pcie3_ip</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsynthesiswrapper_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Tue Oct 20 09:21:57 UTC 2020</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:ab6a41c1</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogbehavioralsimulation</spirit:name>
        <spirit:displayName>Verilog Simulation</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:simulation</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogbehavioralsimulation_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Tue Oct 20 09:21:57 UTC 2020</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:dc30199f</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
      <spirit:view>
        <spirit:name>xilinx_verilogsimulationwrapper</spirit:name>
        <spirit:displayName>Verilog Simulation Wrapper</spirit:displayName>
        <spirit:envIdentifier>verilogSource:vivado.xilinx.com:simulation.wrapper</spirit:envIdentifier>
        <spirit:language>verilog</spirit:language>
        <spirit:modelName>ntps_top_axi_pcie3_0_0_pcie3_ip</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>xilinx_verilogsimulationwrapper_view_fileset</spirit:localName>
        </spirit:fileSetRef>
        <spirit:parameters>
          <spirit:parameter>
            <spirit:name>GENtimestamp</spirit:name>
            <spirit:value>Tue Oct 20 09:21:57 UTC 2020</spirit:value>
          </spirit:parameter>
          <spirit:parameter>
            <spirit:name>outputProductCRC</spirit:name>
            <spirit:value>9:dc30199f</spirit:value>
          </spirit:parameter>
        </spirit:parameters>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>pci_exp_txn</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>pci_exp_txp</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>pci_exp_rxn</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>pci_exp_rxp</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_pclk_out_slave</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_pclk_out_slave" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_pipe_rxusrclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_pipe_rxusrclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_rxoutclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_rxoutclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_dclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_dclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_userclk1_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_userclk1_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_userclk2_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_userclk2_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_oobclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_oobclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_qplllock_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_qplllock_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_qplloutclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_qplloutclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_qplloutrefclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_qplloutrefclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>int_pclk_sel_slave</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.int_pclk_sel_slave" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_pclk_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_pclk_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxusrclk_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxusrclk_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxoutclk_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxoutclk_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_dclk_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_dclk_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_userclk1_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_userclk1_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_userclk2_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_userclk2_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_oobclk_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_oobclk_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_mmcm_lock_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_mmcm_lock_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_txoutclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_txoutclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxoutclk_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxoutclk_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_pclk_sel_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_pclk_sel_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_gen3_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_gen3_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_mmcm_rst_n</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_mmcm_rst_n" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_CLK&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>mmcm_lock</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_reset</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>reg</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_lnk_up</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_app_rdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_WIDTH&apos;)) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">59</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tkeep</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.KEEP_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_rq_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_WIDTH&apos;)) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">74</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tkeep</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.KEEP_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_rc_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_WIDTH&apos;)) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">84</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tkeep</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.KEEP_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>m_axis_cq_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_WIDTH&apos;)) - 1)">255</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tuser</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">32</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tlast</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tkeep</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.KEEP_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tvalid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>s_axis_cc_tready</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_seq_num</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_seq_num" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_seq_num_vld</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_seq_num_vld" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_tag</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_tag" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_rq_tag_vld</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_rq_tag_vld" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_tfc_nph_av</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_tfc_nph_av" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TX_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_tfc_npd_av</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_tfc_npd_av" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TX_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_cq_np_req</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_cq_np_req" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_cq_np_req_count</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_cq_np_req_count" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_phy_link_down</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_phy_link_down" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_phy_link_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_phy_link_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_negotiated_width</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_negotiated_width" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_current_speed</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_current_speed" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_max_payload</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_max_payload" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_max_read_req</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_max_read_req" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_function_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_function_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_function_power_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_function_power_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_power_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">17</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_power_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_link_power_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_link_power_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_addr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">18</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_addr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_write</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_write" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_write_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_write_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_byte_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_byte_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_read</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_read" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_read_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_read_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_read_write_done</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_read_write_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_mgmt_type1_cfg_reg_access</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_mgmt_type1_cfg_reg_access" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_MGMT_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_cor_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_cor_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_nonfatal_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_nonfatal_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_fatal_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_fatal_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ltr_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ltr_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ltssm_state</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ltssm_state" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_rcb_status</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_rcb_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_dpa_substate_change</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_dpa_substate_change" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_obff_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_obff_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_pl_status_change</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_pl_status_change" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_tph_requester_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_tph_requester_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_tph_st_mode</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_tph_st_mode" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_tph_requester_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_tph_requester_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_tph_st_mode</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">17</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_tph_st_mode" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_received</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_received" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.RCV_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_received_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_received_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.RCV_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_received_type</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_received_type" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.RCV_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_transmit</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_transmit" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_transmit_type</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_transmit_type" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_transmit_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_transmit_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_msg_transmit_done</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_msg_transmit_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_TX_MSG_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_ph</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_ph" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_pd</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_pd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_nph</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_nph" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_npd</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_npd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_cplh</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_cplh" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_cpld</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_cpld" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_fc_sel</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_fc_sel" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_FC_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_per_func_status_control</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_per_func_status_control" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PER_FUNC_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_per_func_status_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_per_func_status_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PER_FUNC_STATUS_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_per_function_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_per_function_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_per_function_output_request</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_per_function_output_request" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_per_function_update_done</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_per_function_update_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_subsys_vend_id</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString" spirit:resolve="dependent" spirit:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_SUBSYSTEM_VENDOR_ID&apos;))" spirit:bitStringLength="16">0x10EE</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_subsys_vend_id" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_dsn</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_dsn" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_power_state_change_ack</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_power_state_change_ack" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_power_state_change_interrupt</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_power_state_change_interrupt" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_cor_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_cor_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_err_uncor_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_err_uncor_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_flr_in_process</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_flr_in_process" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_flr_done</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_flr_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_flr_in_process</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_flr_in_process" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_vf_flr_done</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_vf_flr_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_link_training_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_link_training_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_read_received</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_read_received" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_write_received</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_write_received" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_register_number</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">9</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_register_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_function_number</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_function_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_write_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_write_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_write_byte_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_write_byte_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_read_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_read_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ext_read_data_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ext_read_data_valid" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_int</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_pending</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_sent</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_vf_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_vf_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_mmenable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_mmenable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_mask_update</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_mask_update" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_select</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">3</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_select" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_int</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_int" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_pending_status</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_pending_status" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_sent</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_sent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_fail</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_fail" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_mask</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_mask" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_vf_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_vf_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_vf_mask</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">5</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_vf_mask" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_data</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_address</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_address" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_int</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_int" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_sent</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_sent" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msix_fail</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msix_fail" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot; )">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_attr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_attr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_tph_present</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_tph_present" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_tph_type</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_tph_type" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_tph_st_tag</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">8</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_tph_st_tag" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_interrupt_msi_function_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_interrupt_msi_function_number" xilinx:dependency="( (spirit:decode(id(&apos;MODELPARAM_VALUE.MSI_EN&apos;)) = &quot;TRUE&quot; ) or (spirit:decode(id(&apos;MODELPARAM_VALUE.MSIX_EN&apos;)) = &quot;TRUE&quot;  and spirit:decode(id(&apos;MODELPARAM_VALUE.MULT_PF_DES&apos;) == &quot;TRUE&quot;) ) )">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_hot_reset_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_hot_reset_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_config_space_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_config_space_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_req_pm_transition_l23_ready</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_req_pm_transition_l23_ready" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_hot_reset_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_hot_reset_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ds_port_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ds_port_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ds_bus_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ds_bus_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ds_device_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ds_device_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cfg_ds_function_number</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cfg_ds_function_number" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.CFG_CTL_IF&apos;)) = &quot;TRUE&quot;)">true</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_tph_stt_address</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.user_tph_stt_address" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_tph_function_num</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.user_tph_function_num" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_tph_stt_read_data</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.user_tph_stt_read_data" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_tph_stt_read_data_valid</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.user_tph_stt_read_data_valid" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>user_tph_stt_read_enable</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.user_tph_stt_read_enable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>sys_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>sys_reset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_drp_crscode</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_drp_crscode" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_drp_fsm</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">17</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_drp_fsm" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_drp_done</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_drp_done" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_drp_reset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_drp_reset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_qplllock</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_qplllock" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_qplloutclk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_qplloutclk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_qplloutrefclk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_qplloutrefclk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_qplld</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_qplld" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_qpllreset</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_qpllreset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_drp_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_drp_clk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_drp_rst_n</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_drp_rst_n" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_drp_ovrd</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_drp_ovrd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_drp_gen3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_drp_gen3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpll_drp_start</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpll_drp_start" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_EXT_GT_COMMON&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_txprbssel</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_txprbssel" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxprbssel</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxprbssel" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_txprbsforceerr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_txprbsforceerr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxprbscntreset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxprbscntreset" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_loopback</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">2</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_loopback" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxprbserr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxprbserr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_txinhibit</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_txinhibit" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rst_fsm</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">4</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rst_fsm" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_qrst_fsm</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">11</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_qrst_fsm" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rate_fsm</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 5) - 1)">39</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rate_fsm" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_sync_fsm_tx</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 6) - 1)">47</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_sync_fsm_tx" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_sync_fsm_rx</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 7) - 1)">55</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_sync_fsm_rx" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_drp_fsm</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 7) - 1)">55</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_drp_fsm" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rst_idle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rst_idle" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_qrst_idle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_qrst_idle" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rate_idle</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rate_idle" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_eyescandataerror</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_eyescandataerror" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxstatus</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">23</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxstatus" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_dmonitorout</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 15) - 1)">119</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_dmonitorout" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_cpll_lock</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;))) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_cpll_lock" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_qpll_lock</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;))/8)+1) - 1)">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_qpll_lock" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxpmaresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;))) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxpmaresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxbufstatus</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 3) - 1)">23</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxbufstatus" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_txphaligndone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;))) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_txphaligndone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_txphinitdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;))) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_txphinitdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_txdlysresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) ) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_txdlysresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxphaligndone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) ) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxphaligndone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxdlysresetdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) ) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxdlysresetdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxsyncdone</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;))) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxsyncdone" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxdisperr</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 8) - 1)">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxdisperr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxnotintable</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 8) - 1)">63</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxnotintable" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rxcommadet</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;))) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rxcommadet" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>gt_ch_drp_rdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.gt_ch_drp_rdy" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_0</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_0" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_1</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_1" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_2</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_2" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_3</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_3" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_4</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_4" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_5</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_5" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_6</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_6" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_7</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_7" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_8</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_8" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug_9</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug_9" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_debug</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_debug" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpclk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpclk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpaddr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 9) - 1)">71</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpaddr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpen</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpen" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpdi</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">127</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpdi" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpwe</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpwe" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drpdo</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 16) - 1)">127</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drpdo" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>ext_ch_gt_drprdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.ext_ch_gt_drprdy" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_CH_GT_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>icap_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.icap_clk" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) = &quot;TANDEM_PCIE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>icap_csib</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.icap_csib" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) = &quot;TANDEM_PCIE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>icap_rdwrb</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.icap_rdwrb" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) = &quot;TANDEM_PCIE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>icap_i</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="bitString">4294967295</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.icap_i" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) = &quot;TANDEM_PCIE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>icap_o</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">31</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>wire</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.icap_o" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) = &quot;TANDEM_PCIE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_eos_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_eos_in" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;TRUE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_cfgclk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_cfgclk" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_cfgmclk</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_cfgmclk" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_eos</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_eos" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_preq</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_preq" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_clk" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_gsr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_gsr" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_gts</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_gts" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_keyclearb</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_keyclearb" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_pack</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_pack" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_usrcclko</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_usrcclko" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_usrcclkts</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_usrcclkts" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_usrdoneo</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_usrdoneo" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>startup_usrdonets</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.startup_usrdonets" xilinx:dependency="spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE&apos;)) = &quot;FALSE&quot; and spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_FAST_CONFIG&apos;)) != &quot;NONE&quot;">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_drp_clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">1</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_drp_clk" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_drp_en</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_drp_en" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_drp_we</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_drp_we" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_drp_addr</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">10</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_drp_addr" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_drp_di</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_drp_di" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_drp_do</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_drp_do" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pcie_drp_rdy</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pcie_drp_rdy" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PCIE_DRP&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>common_commands_in</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">25</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.common_commands_in" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_0_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_0_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_1_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_1_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_2_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_2_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_3_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_3_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_4_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_4_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_5_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_5_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_6_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_6_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_rx_7_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_rx_7_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>common_commands_out</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">25</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.common_commands_out" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_0_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_0_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_1_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_1_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_2_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_2_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_3_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_3_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_4_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_4_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_5_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_5_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_6_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_6_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>pipe_tx_7_sigs</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long">83</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.pipe_tx_7_sigs" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.EXT_PIPE_INTERFACE&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>cpllpd</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.cpllpd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.POWER_DOWN&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txpd</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 2) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txpd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.POWER_DOWN&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>rxpd</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) * 2) - 1)">15</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.rxpd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.POWER_DOWN&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txpdelecidlemode</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txpdelecidlemode" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.POWER_DOWN&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txdetectrx</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txdetectrx" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.POWER_DOWN&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>txelecidle</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;)) - 1)">7</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.txelecidle" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.POWER_DOWN&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>qpllpd</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left spirit:format="long" spirit:resolve="dependent" spirit:dependency="(((spirit:decode(id(&apos;MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH&apos;))/8)+1) - 1)">1</spirit:left>
            <spirit:right spirit:format="long">0</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic_vector</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.qpllpd" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.POWER_DOWN&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
      <spirit:port>
        <spirit:name>powerdown</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>std_logic</spirit:typeName>
              <spirit:viewNameRef>xilinx_verilogsynthesis</spirit:viewNameRef>
              <spirit:viewNameRef>xilinx_verilogbehavioralsimulation</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
          <spirit:driver>
            <spirit:defaultValue spirit:format="long">0</spirit:defaultValue>
          </spirit:driver>
        </spirit:wire>
        <spirit:vendorExtensions>
          <xilinx:portInfo>
            <xilinx:enablement>
              <xilinx:isEnabled xilinx:resolve="dependent" xilinx:id="PORT_ENABLEMENT.powerdown" xilinx:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.POWER_DOWN&apos;)) = &quot;TRUE&quot;)">false</xilinx:isEnabled>
            </xilinx:enablement>
          </xilinx:portInfo>
        </spirit:vendorExtensions>
      </spirit:port>
    </spirit:ports>
    <spirit:modelParameters>
      <spirit:modelParameter xsi:type="spirit:nameValueTypeType" spirit:dataType="integer">
        <spirit:name>PL_LINK_CAP_MAX_LINK_SPEED</spirit:name>
        <spirit:displayName>Pl Link Cap Max Link Speed</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_SPEED" spirit:bitStringLength="3">2</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PL_LINK_CAP_MAX_LINK_WIDTH</spirit:name>
        <spirit:displayName>Pl Link Cap Max Link Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH">8</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>USER_CLK2_FREQ</spirit:name>
        <spirit:displayName>User Clk2 Freq</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.USER_CLK2_FREQ">3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_LINK_CAP_ASPM_SUPPORT</spirit:name>
        <spirit:displayName>ASPM Support</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_LINK_CAP_ASPM_SUPPORT">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>C_DATA_WIDTH</spirit:name>
        <spirit:displayName>C Data Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.C_DATA_WIDTH">256</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>REF_CLK_FREQ</spirit:name>
        <spirit:displayName>Ref Clk Freq</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.REF_CLK_FREQ">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PCIE_LINK_SPEED</spirit:name>
        <spirit:displayName>Pcie Link Speed</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE_LINK_SPEED">3</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>KEEP_WIDTH</spirit:name>
        <spirit:displayName>Keep Width</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="dependent" spirit:id="MODELPARAM_VALUE.KEEP_WIDTH" spirit:dependency="(spirit:decode(id(&apos;MODELPARAM_VALUE.C_DATA_WIDTH&apos;)) div 32)">8</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>ARI_CAP_ENABLE</spirit:name>
        <spirit:displayName>Ari Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.ARI_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_ARI_CAP_NEXT_FUNC</spirit:name>
        <spirit:displayName>Pf0 ARI Cap Next Func</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_ARI_CAP_NEXT_FUNC" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_CC_ALIGNMENT_MODE</spirit:name>
        <spirit:displayName>Axisten If Cc Alignment Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_CC_ALIGNMENT_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_CQ_ALIGNMENT_MODE</spirit:name>
        <spirit:displayName>Axisten If Cq Alignment Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_CQ_ALIGNMENT_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_RC_ALIGNMENT_MODE</spirit:name>
        <spirit:displayName>Axisten If Rc Alignment Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_RC_ALIGNMENT_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_RC_STRADDLE</spirit:name>
        <spirit:displayName>Axisten If Rc Straddle</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_RC_STRADDLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_RQ_ALIGNMENT_MODE</spirit:name>
        <spirit:displayName>Axisten If Rq Alignment Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_RQ_ALIGNMENT_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_AER_CAP_ECRC_CHECK_CAPABLE</spirit:name>
        <spirit:displayName>Pf0 Aer Cap Ecrc Check Capable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_AER_CAP_ECRC_CHECK_CAPABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_AER_CAP_ECRC_GEN_CAPABLE</spirit:name>
        <spirit:displayName>Pf0 Aer Cap Ecrc Gen Capable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_AER_CAP_ECRC_GEN_CAPABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_AER_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Aer Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_AER_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf0 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf1 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf2 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf3 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf4 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf5 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR0_APERTURE_SIZE" spirit:bitStringLength="5">0b01101</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR0_CONTROL" spirit:bitStringLength="3">0b100</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR1_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR1_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR2_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR2_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR3_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR3_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR4_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR4_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR5_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_BAR5_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_CAPABILITY_POINTER</spirit:name>
        <spirit:displayName>Pf0 Capability Pointer</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_CAPABILITY_POINTER" spirit:bitStringLength="8">0x80</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_CLASS_CODE</spirit:name>
        <spirit:displayName>Pf0 Class Code</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_CLASS_CODE" spirit:bitStringLength="24">0x058000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_VENDOR_ID</spirit:name>
        <spirit:displayName>Pf0 Vendor Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_VENDOR_ID" spirit:bitStringLength="16">0x10EE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf0 Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEVICE_ID" spirit:bitStringLength="16">0x7028</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 128b Cas Atomic Completer Support</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 32b Atomic Completer Support</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 64b Atomic Completer Support</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP2_LTR_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 Ltr Support</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_LTR_SUPPORT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DEV_CAP2_OBFF_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 Obff Support</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_OBFF_SUPPORT" spirit:bitStringLength="2">00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT</spirit:name>
        <spirit:displayName>Pf0 Dev Cap2 Tph Completer Support</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP_EXT_TAG_SUPPORTED</spirit:name>
        <spirit:displayName>Pf0 Dev Cap Ext Tag Supported</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP_EXT_TAG_SUPPORTED">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE</spirit:name>
        <spirit:displayName>Pf0 Dev Cap Function Level Reset Capable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DEV_CAP_MAX_PAYLOAD_SIZE</spirit:name>
        <spirit:displayName>Pf0 Dev Cap Max Payload Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DEV_CAP_MAX_PAYLOAD_SIZE" spirit:bitStringLength="3">0b010</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DPA_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Dpa Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DPA_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0</spirit:name>
        <spirit:displayName>Pf0 DPA Cap Sub State Power Allocation0</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION0" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1</spirit:name>
        <spirit:displayName>Pf0 DPA Cap Sub State Power Allocation1</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION1" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2</spirit:name>
        <spirit:displayName>Pf0 DPA Cap Sub State Power Allocation2</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION2" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3</spirit:name>
        <spirit:displayName>Pf0 DPA Cap Sub State Power Allocation3</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION3" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4</spirit:name>
        <spirit:displayName>Pf0 DPA Cap Sub State Power Allocation4</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION4" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5</spirit:name>
        <spirit:displayName>Pf0 DPA Cap Sub State Power Allocation5</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION5" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6</spirit:name>
        <spirit:displayName>Pf0 DPA Cap Sub State Power Allocation6</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION6" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7</spirit:name>
        <spirit:displayName>Pf0 DPA Cap Sub State Power Allocation7</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DPA_CAP_SUB_STATE_POWER_ALLOCATION7" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0</spirit:name>
        <spirit:displayName>Pf1 DPA Cap Sub State Power Allocation0</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION0" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1</spirit:name>
        <spirit:displayName>Pf1 DPA Cap Sub State Power Allocation1</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION1" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2</spirit:name>
        <spirit:displayName>Pf1 DPA Cap Sub State Power Allocation2</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION2" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3</spirit:name>
        <spirit:displayName>Pf1 DPA Cap Sub State Power Allocation3</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION3" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4</spirit:name>
        <spirit:displayName>Pf1 DPA Cap Sub State Power Allocation4</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION4" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5</spirit:name>
        <spirit:displayName>Pf1 DPA Cap Sub State Power Allocation5</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION5" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6</spirit:name>
        <spirit:displayName>Pf1 DPA Cap Sub State Power Allocation6</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION6" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7</spirit:name>
        <spirit:displayName>Pf1 DPA Cap Sub State Power Allocation7</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DPA_CAP_SUB_STATE_POWER_ALLOCATION7" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_DSN_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Dsn Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_DSN_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_EXPANSION_ROM_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Expansion Rom Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_EXPANSION_ROM_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_EXPANSION_ROM_ENABLE</spirit:name>
        <spirit:displayName>Pf0 Expansion Rom Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_EXPANSION_ROM_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_INTERRUPT_PIN</spirit:name>
        <spirit:displayName>Pf0 Interrupt Pin</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_INTERRUPT_PIN" spirit:bitStringLength="3">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_LINK_STATUS_SLOT_CLOCK_CONFIG</spirit:name>
        <spirit:displayName>Pf0 Link Status Slot Clock Config</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_LINK_STATUS_SLOT_CLOCK_CONFIG">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_LTR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Ltr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_LTR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSIX_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_NEXTPTR" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Pf0 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_MSI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Msi Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_MSI_CAP_NEXTPTR" spirit:bitStringLength="8">0xC0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_PB_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Pb Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PB_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_NEXTPTR" spirit:bitStringLength="8">0x90</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_PM_CAP_PMESUPPORT_D0</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Pmesupport D0</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D0">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_PM_CAP_PMESUPPORT_D1</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Pmesupport D1</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D1">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_PM_CAP_PMESUPPORT_D3HOT</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Pmesupport D3hot</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D3HOT">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_PM_CAP_SUPP_D1_STATE</spirit:name>
        <spirit:displayName>Pf0 Pm Cap Supp D1 State</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_PM_CAP_SUPP_D1_STATE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_RBAR_CAP_ENABLE</spirit:name>
        <spirit:displayName>Pf0 Rbar Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_RBAR_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_RBAR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Rbar Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_RBAR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_RBAR_CAP_SIZE0</spirit:name>
        <spirit:displayName>Pf0 Rbar Cap Size0</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_RBAR_CAP_SIZE0" spirit:bitStringLength="20">0x00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_RBAR_CAP_SIZE1</spirit:name>
        <spirit:displayName>Pf0 Rbar Cap Size1</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_RBAR_CAP_SIZE1" spirit:bitStringLength="20">0x00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_RBAR_CAP_SIZE2</spirit:name>
        <spirit:displayName>Pf0 Rbar Cap Size2</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_RBAR_CAP_SIZE2" spirit:bitStringLength="20">0x00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_RBAR_CAP_SIZE0</spirit:name>
        <spirit:displayName>Pf1 Rbar Cap Size0</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_RBAR_CAP_SIZE0" spirit:bitStringLength="20">0x00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_RBAR_CAP_SIZE1</spirit:name>
        <spirit:displayName>Pf1 Rbar Cap Size1</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_RBAR_CAP_SIZE1" spirit:bitStringLength="20">0x00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_RBAR_CAP_SIZE2</spirit:name>
        <spirit:displayName>Pf1 Rbar Cap Size2</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_RBAR_CAP_SIZE2" spirit:bitStringLength="20">0x00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_REVISION_ID</spirit:name>
        <spirit:displayName>Pf0 Revision Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_REVISION_ID" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR0_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR0_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR1_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR1_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR2_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR2_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR3_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR3_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR4_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR4_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR5_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf0 Sriov Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_BAR5_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_CAP_INITIAL_VF</spirit:name>
        <spirit:displayName>Pf0 Sriov Cap Initial Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_CAP_INITIAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Sriov Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_CAP_TOTAL_VF</spirit:name>
        <spirit:displayName>Pf0 Sriov Cap Total Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_CAP_TOTAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_CAP_VER</spirit:name>
        <spirit:displayName>Pf0 Sriov Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_CAP_VER" spirit:bitStringLength="4">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_FIRST_VF_OFFSET</spirit:name>
        <spirit:displayName>Pf0 Sriov First Vf Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_FIRST_VF_OFFSET" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_FUNC_DEP_LINK</spirit:name>
        <spirit:displayName>Pf0 Sriov Func Dep Link</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_FUNC_DEP_LINK" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Sriov Supported Page Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_SUPPORTED_PAGE_SIZE" spirit:bitStringLength="32">0x00000553</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SRIOV_VF_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf0 Sriov Vf Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SRIOV_VF_DEVICE_ID" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SUBSYSTEM_VENDOR_ID</spirit:name>
        <spirit:displayName>Pf0 Subsystem Vendor Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SUBSYSTEM_VENDOR_ID" spirit:bitStringLength="16">0x10EE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_SUBSYSTEM_ID</spirit:name>
        <spirit:displayName>Pf0 Subsystem Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_SUBSYSTEM_ID" spirit:bitStringLength="16">0x0007</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF0_TPHR_CAP_ENABLE</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf0 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf1 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf2 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf3 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf4 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf5 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_TPHR_CAP_ST_TABLE_LOC</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap St Table Loc</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_ST_TABLE_LOC" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_TPHR_CAP_ST_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap St Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_ST_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_TPHR_CAP_VER</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_TPHR_CAP_ST_TABLE_LOC</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap St Table Loc</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_ST_TABLE_LOC" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_TPHR_CAP_ST_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap St Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_ST_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_TPHR_CAP_VER</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Vf0 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_TPHR_CAP_ST_TABLE_LOC</spirit:name>
        <spirit:displayName>Vf0 Tphr Cap St Table Loc</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_TPHR_CAP_ST_TABLE_LOC" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_TPHR_CAP_ST_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf0 Tphr Cap St Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_TPHR_CAP_ST_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_TPHR_CAP_VER</spirit:name>
        <spirit:displayName>Vf0 Tphr Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_TPHR_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Vf1 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_TPHR_CAP_ST_TABLE_LOC</spirit:name>
        <spirit:displayName>Vf1 Tphr Cap St Table Loc</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_TPHR_CAP_ST_TABLE_LOC" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_TPHR_CAP_ST_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf1 Tphr Cap St Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_TPHR_CAP_ST_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_TPHR_CAP_VER</spirit:name>
        <spirit:displayName>Vf1 Tphr Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_TPHR_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Vf2 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_TPHR_CAP_ST_TABLE_LOC</spirit:name>
        <spirit:displayName>Vf2 Tphr Cap St Table Loc</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_TPHR_CAP_ST_TABLE_LOC" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_TPHR_CAP_ST_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf2 Tphr Cap St Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_TPHR_CAP_ST_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_TPHR_CAP_VER</spirit:name>
        <spirit:displayName>Vf2 Tphr Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_TPHR_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Vf3 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_TPHR_CAP_ST_TABLE_LOC</spirit:name>
        <spirit:displayName>Vf3 Tphr Cap St Table Loc</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_TPHR_CAP_ST_TABLE_LOC" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_TPHR_CAP_ST_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf3 Tphr Cap St Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_TPHR_CAP_ST_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_TPHR_CAP_VER</spirit:name>
        <spirit:displayName>Vf3 Tphr Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_TPHR_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Vf4 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_TPHR_CAP_ST_TABLE_LOC</spirit:name>
        <spirit:displayName>Vf4 Tphr Cap St Table Loc</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_TPHR_CAP_ST_TABLE_LOC" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_TPHR_CAP_ST_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf4 Tphr Cap St Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_TPHR_CAP_ST_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_TPHR_CAP_VER</spirit:name>
        <spirit:displayName>Vf4 Tphr Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_TPHR_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_TPHR_CAP_ST_MODE_SEL</spirit:name>
        <spirit:displayName>Vf5 Tphr Cap St Mode Sel</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_TPHR_CAP_ST_MODE_SEL" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_TPHR_CAP_ST_TABLE_LOC</spirit:name>
        <spirit:displayName>Vf5 Tphr Cap St Table Loc</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_TPHR_CAP_ST_TABLE_LOC" spirit:bitStringLength="2">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_TPHR_CAP_ST_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf5 Tphr Cap St Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_TPHR_CAP_ST_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_TPHR_CAP_VER</spirit:name>
        <spirit:displayName>Vf5 Tphr Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_TPHR_CAP_VER" spirit:bitStringLength="4">0x1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_TPHR_CAP_DEV_SPECIFIC_MODE</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Dev Specific Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_DEV_SPECIFIC_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_TPHR_CAP_INT_VEC_MODE</spirit:name>
        <spirit:displayName>Pf0 Tphr Cap Int Vec Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_TPHR_CAP_INT_VEC_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_TPHR_CAP_DEV_SPECIFIC_MODE</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap Dev Specific Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_DEV_SPECIFIC_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_TPHR_CAP_INT_VEC_MODE</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap Int Vec Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_INT_VEC_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_TPHR_CAP_DEV_SPECIFIC_MODE</spirit:name>
        <spirit:displayName>Vf0 Tphr Cap Dev Specific Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_TPHR_CAP_DEV_SPECIFIC_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_TPHR_CAP_INT_VEC_MODE</spirit:name>
        <spirit:displayName>Vf0 Tphr Cap Int Vec Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_TPHR_CAP_INT_VEC_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_TPHR_CAP_DEV_SPECIFIC_MODE</spirit:name>
        <spirit:displayName>Vf1 Tphr Cap Dev Specific Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_TPHR_CAP_DEV_SPECIFIC_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_TPHR_CAP_INT_VEC_MODE</spirit:name>
        <spirit:displayName>Vf1 Tphr Cap Int Vec Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_TPHR_CAP_INT_VEC_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_TPHR_CAP_DEV_SPECIFIC_MODE</spirit:name>
        <spirit:displayName>Vf2 Tphr Cap Dev Specific Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_TPHR_CAP_DEV_SPECIFIC_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_TPHR_CAP_INT_VEC_MODE</spirit:name>
        <spirit:displayName>Vf2 Tphr Cap Int Vec Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_TPHR_CAP_INT_VEC_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_TPHR_CAP_DEV_SPECIFIC_MODE</spirit:name>
        <spirit:displayName>Vf3 Tphr Cap Dev Specific Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_TPHR_CAP_DEV_SPECIFIC_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_TPHR_CAP_INT_VEC_MODE</spirit:name>
        <spirit:displayName>Vf3 Tphr Cap Int Vec Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_TPHR_CAP_INT_VEC_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_TPHR_CAP_DEV_SPECIFIC_MODE</spirit:name>
        <spirit:displayName>Vf4 Tphr Cap Dev Specific Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_TPHR_CAP_DEV_SPECIFIC_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_TPHR_CAP_INT_VEC_MODE</spirit:name>
        <spirit:displayName>Vf4 Tphr Cap Int Vec Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_TPHR_CAP_INT_VEC_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_TPHR_CAP_DEV_SPECIFIC_MODE</spirit:name>
        <spirit:displayName>Vf5 Tphr Cap Dev Specific Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_TPHR_CAP_DEV_SPECIFIC_MODE">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_TPHR_CAP_INT_VEC_MODE</spirit:name>
        <spirit:displayName>Vf5 Tphr Cap Int Vec Mode</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_TPHR_CAP_INT_VEC_MODE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF0_VC_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf0 Vc Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF0_VC_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>SPARE_WORD1</spirit:name>
        <spirit:displayName>Secondary Pcie Extended Capability Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SPARE_WORD1" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF1_AER_CAP_ECRC_CHECK_CAPABLE</spirit:name>
        <spirit:displayName>Pf1 Aer Cap Ecrc Check Capable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_AER_CAP_ECRC_CHECK_CAPABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF1_AER_CAP_ECRC_GEN_CAPABLE</spirit:name>
        <spirit:displayName>Pf1 Aer Cap Ecrc Gen Capable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_AER_CAP_ECRC_GEN_CAPABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_AER_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Aer Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_AER_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_ARI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Ari Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_ARI_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR0_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR0_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR1_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR1_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR2_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR2_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR3_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR3_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR4_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR4_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR5_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_BAR5_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_CAPABILITY_POINTER</spirit:name>
        <spirit:displayName>Pf1 Capability Pointer</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_CAPABILITY_POINTER" spirit:bitStringLength="8">0x80</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_CLASS_CODE</spirit:name>
        <spirit:displayName>Pf1 Class Code</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_CLASS_CODE" spirit:bitStringLength="24">0x058000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf1 Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DEVICE_ID" spirit:bitStringLength="16">0x7011</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DEV_CAP_MAX_PAYLOAD_SIZE</spirit:name>
        <spirit:displayName>Pf1 Dev Cap Max Payload Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DEV_CAP_MAX_PAYLOAD_SIZE" spirit:bitStringLength="3">0b010</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DPA_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Dpa Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DPA_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_DSN_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Dsn Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_DSN_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_EXPANSION_ROM_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Expansion Rom Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_EXPANSION_ROM_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF1_EXPANSION_ROM_ENABLE</spirit:name>
        <spirit:displayName>Pf1 Expansion Rom Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_EXPANSION_ROM_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_INTERRUPT_PIN</spirit:name>
        <spirit:displayName>Pf1 Interrupt Pin</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_INTERRUPT_PIN" spirit:bitStringLength="3">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSIX_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_NEXTPTR" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Pf1 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_MSI_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Msi Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_MSI_CAP_NEXTPTR" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_PB_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Pb Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_PB_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_PM_CAP_NEXTPTR" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF1_RBAR_CAP_ENABLE</spirit:name>
        <spirit:displayName>Pf1 Rbar Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_RBAR_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_RBAR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Rbar Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_RBAR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_REVISION_ID</spirit:name>
        <spirit:displayName>Pf1 Revision Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_REVISION_ID" spirit:bitStringLength="8">0x00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR0_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar0 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR0_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR0_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar0 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR0_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR1_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar1 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR1_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR1_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar1 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR1_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR2_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar2 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR2_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR2_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar2 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR2_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR3_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar3 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR3_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR3_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar3 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR3_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR4_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar4 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR4_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR4_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar4 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR4_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR5_APERTURE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar5 Aperture Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR5_APERTURE_SIZE" spirit:bitStringLength="5">0b00000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_BAR5_CONTROL</spirit:name>
        <spirit:displayName>Pf1 Sriov Bar5 Control</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_BAR5_CONTROL" spirit:bitStringLength="3">0b000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_CAP_INITIAL_VF</spirit:name>
        <spirit:displayName>Pf1 Sriov Cap Initial Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_CAP_INITIAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Sriov Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_CAP_TOTAL_VF</spirit:name>
        <spirit:displayName>Pf1 Sriov Cap Total Vf</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_CAP_TOTAL_VF" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_CAP_VER</spirit:name>
        <spirit:displayName>Pf1 Sriov Cap Ver</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_CAP_VER" spirit:bitStringLength="4">0x0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_FIRST_VF_OFFSET</spirit:name>
        <spirit:displayName>Pf1 Sriov First Vf Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_FIRST_VF_OFFSET" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_FUNC_DEP_LINK</spirit:name>
        <spirit:displayName>Pf1 Sriov Func Dep Link</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_FUNC_DEP_LINK" spirit:bitStringLength="16">0x0001</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
        <spirit:displayName>Pf1 Sriov Supported Page Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_SUPPORTED_PAGE_SIZE" spirit:bitStringLength="32">0x00000553</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SRIOV_VF_DEVICE_ID</spirit:name>
        <spirit:displayName>Pf1 Sriov Vf Device Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SRIOV_VF_DEVICE_ID" spirit:bitStringLength="16">0x0000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_SUBSYSTEM_ID</spirit:name>
        <spirit:displayName>Pf1 Subsystem Id</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_SUBSYSTEM_ID" spirit:bitStringLength="16">0x0007</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PF1_TPHR_CAP_ENABLE</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>PF1_TPHR_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Pf1 Tphr Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PF1_TPHR_CAP_NEXTPTR" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PL_UPSTREAM_FACING</spirit:name>
        <spirit:displayName>Pl Upstream Facing</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PL_UPSTREAM_FACING">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>SRIOV_CAP_ENABLE</spirit:name>
        <spirit:displayName>Sriov Cap Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SRIOV_CAP_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>TL_CREDITS_CD</spirit:name>
        <spirit:displayName>Tl Credits Cd</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_CD" spirit:bitStringLength="12">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>TL_CREDITS_CH</spirit:name>
        <spirit:displayName>Tl Credits Ch</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_CH" spirit:bitStringLength="32">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>TL_CREDITS_NPD</spirit:name>
        <spirit:displayName>Tl Credits Npd</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_NPD" spirit:bitStringLength="12">0x028</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>TL_CREDITS_NPH</spirit:name>
        <spirit:displayName>Tl Credits Nph</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_NPH" spirit:bitStringLength="8">0x20</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>TL_CREDITS_PD</spirit:name>
        <spirit:displayName>Tl Credits Pd</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_PD" spirit:bitStringLength="12">0x198</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>TL_CREDITS_PH</spirit:name>
        <spirit:displayName>Tl Credits Ph</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_CREDITS_PH" spirit:bitStringLength="8">0x20</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE</spirit:name>
        <spirit:displayName>Tl Extended Cfg Extend Interface Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_EXTENDED_CFG_EXTEND_INTERFACE_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TL_LEGACY_MODE_ENABLE</spirit:name>
        <spirit:displayName>Tl Legacy Mode Enable</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_LEGACY_MODE_ENABLE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TL_PF_ENABLE_REG</spirit:name>
        <spirit:displayName>Tl Pf Enable Reg</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TL_PF_ENABLE_REG">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_CAPABILITY_POINTER</spirit:name>
        <spirit:displayName>Vf0 Capability Pointer</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_CAPABILITY_POINTER" spirit:bitStringLength="8">0x80</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Vf0 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Vf0 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Vf0 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Vf0 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf0 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Vf0 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF0_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf0 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF0_PM_CAP_NEXTPTR" spirit:bitStringLength="8">&quot;00000000&quot;</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Vf1 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Vf1 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Vf1 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Vf1 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf1 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Vf1 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF1_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf1 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF1_PM_CAP_NEXTPTR" spirit:bitStringLength="8">&quot;00000000&quot;</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Vf2 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Vf2 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Vf2 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Vf2 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf2 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Vf2 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF2_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf2 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF2_PM_CAP_NEXTPTR" spirit:bitStringLength="8">&quot;00000000&quot;</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Vf3 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Vf3 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Vf3 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Vf3 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf3 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Vf3 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF3_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf3 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF3_PM_CAP_NEXTPTR" spirit:bitStringLength="8">&quot;00000000&quot;</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Vf4 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Vf4 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Vf4 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Vf4 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf4 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Vf4 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF4_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf4 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF4_PM_CAP_NEXTPTR" spirit:bitStringLength="8">&quot;00000000&quot;</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_MSIX_CAP_PBA_BIR</spirit:name>
        <spirit:displayName>Vf5 Msix Cap Pba Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_MSIX_CAP_PBA_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_MSIX_CAP_PBA_OFFSET</spirit:name>
        <spirit:displayName>Vf5 Msix Cap Pba Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_MSIX_CAP_PBA_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_MSIX_CAP_TABLE_BIR</spirit:name>
        <spirit:displayName>Vf5 Msix Cap Table Bir</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_MSIX_CAP_TABLE_BIR">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_MSIX_CAP_TABLE_OFFSET</spirit:name>
        <spirit:displayName>Vf5 Msix Cap Table Offset</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_MSIX_CAP_TABLE_OFFSET" spirit:bitStringLength="29">0x00000000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_MSIX_CAP_TABLE_SIZE</spirit:name>
        <spirit:displayName>Vf5 Msix Cap Table Size</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_MSIX_CAP_TABLE_SIZE" spirit:bitStringLength="11">0x000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_MSI_CAP_MULTIMSGCAP</spirit:name>
        <spirit:displayName>Vf5 Msi Cap Multimsgcap</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_MSI_CAP_MULTIMSGCAP">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>VF5_PM_CAP_NEXTPTR</spirit:name>
        <spirit:displayName>Vf5 Pm Cap Nextptr</spirit:displayName>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.VF5_PM_CAP_NEXTPTR" spirit:bitStringLength="8">&quot;00000000&quot;</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>COMPLETION_SPACE</spirit:name>
        <spirit:displayName>Completion Space</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.COMPLETION_SPACE">16KB</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="boolean">
        <spirit:name>gen_x0y0_ucf</spirit:name>
        <spirit:displayName>Generate X0Y0 UCF</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y0_ucf">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="boolean">
        <spirit:name>gen_x0y3_ucf</spirit:name>
        <spirit:displayName>Generate X0Y3 UCF</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y3_ucf">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="boolean">
        <spirit:name>gen_x0y2_ucf</spirit:name>
        <spirit:displayName>Generate X0Y2 UCF</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y2_ucf">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="boolean">
        <spirit:name>gen_x0y1_ucf</spirit:name>
        <spirit:displayName>Generate X0Y1 UCF</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.gen_x0y1_ucf">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>silicon_revision</spirit:name>
        <spirit:displayName>Silicon Revision</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.silicon_revision">Production</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>xlnx_ref_board</spirit:name>
        <spirit:displayName>Xlnx Ref Board</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.xlnx_ref_board">0</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>pcie_blk_locn</spirit:name>
        <spirit:displayName>Pcie Blk Locn</spirit:displayName>
        <spirit:value spirit:format="long" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.pcie_blk_locn">1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>SHARED_LOGIC_IN_CORE</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.SHARED_LOGIC_IN_CORE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PIPE_SIM</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PIPE_SIM">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MSI_EN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MSI_EN">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MSIX_EN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MSIX_EN">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PCIE_EXT_CLK</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE_EXT_CLK">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PCIE_EXT_GT_COMMON</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE_EXT_GT_COMMON">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>EXT_CH_GT_DRP</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.EXT_CH_GT_DRP">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_STATUS_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_STATUS_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TX_FC_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TX_FC_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_EXT_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_EXT_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_FC_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_FC_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PER_FUNC_STATUS_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PER_FUNC_STATUS_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_MGMT_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_MGMT_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>RCV_MSG_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.RCV_MSG_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_TX_MSG_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_TX_MSG_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>CFG_CTL_IF</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.CFG_CTL_IF">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PCIE_DRP</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE_DRP">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>TRANSCEIVER_CTRL_STATUS_PORTS</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.TRANSCEIVER_CTRL_STATUS_PORTS">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_ENABLE_CLIENT_TAG</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_ENABLE_CLIENT_TAG">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PCIE_USE_MODE</spirit:name>
        <spirit:displayName>PCIE USE MODE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE_USE_MODE">2.1</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>PCIE_FAST_CONFIG</spirit:name>
        <spirit:displayName>PCIE FAST CONFIG</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.PCIE_FAST_CONFIG">NONE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>EXT_STARTUP_PRIMITIVE</spirit:name>
        <spirit:displayName>EXT STARTUP PRIMITIVE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.EXT_STARTUP_PRIMITIVE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>EXT_PIPE_INTERFACE</spirit:name>
        <spirit:displayName>EXT PIPE INTERFACE</spirit:displayName>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.EXT_PIPE_INTERFACE">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>AXISTEN_IF_ENABLE_MSG_ROUTE</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_ENABLE_MSG_ROUTE" spirit:bitStringLength="18">0x20000</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>AXISTEN_IF_ENABLE_RX_MSG_INTFC</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.AXISTEN_IF_ENABLE_RX_MSG_INTFC">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>POWER_DOWN</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.POWER_DOWN">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="integer">
        <spirit:name>DEV_PORT_TYPE</spirit:name>
        <spirit:value spirit:format="bitString" spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.DEV_PORT_TYPE" spirit:bitStringLength="2">00</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>ENABLE_JTAG_DBG</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.ENABLE_JTAG_DBG">FALSE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>MULT_PF_DES</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.MULT_PF_DES">TRUE</spirit:value>
      </spirit:modelParameter>
      <spirit:modelParameter spirit:dataType="string">
        <spirit:name>WIN10_INTEROP</spirit:name>
        <spirit:value spirit:resolve="generated" spirit:id="MODELPARAM_VALUE.WIN10_INTEROP">FALSE</spirit:value>
      </spirit:modelParameter>
    </spirit:modelParameters>
  </spirit:model>
  <spirit:choices>
    <spirit:choice>
      <spirit:name>choice_list_24b724fb</spirit:name>
      <spirit:enumeration>Basic</spirit:enumeration>
      <spirit:enumeration>Advanced</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_2d5c670f</spirit:name>
      <spirit:enumeration>X0Y0</spirit:enumeration>
      <spirit:enumeration>X0Y1</spirit:enumeration>
      <spirit:enumeration>X0Y2</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_4c5a0909</spirit:name>
      <spirit:enumeration>Production</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_52d29139</spirit:name>
      <spirit:enumeration>Bytes</spirit:enumeration>
      <spirit:enumeration>Kilobytes</spirit:enumeration>
      <spirit:enumeration>Megabytes</spirit:enumeration>
      <spirit:enumeration>Gigabytes</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_55451da8</spirit:name>
      <spirit:enumeration>X1</spirit:enumeration>
      <spirit:enumeration>X2</spirit:enumeration>
      <spirit:enumeration>X4</spirit:enumeration>
      <spirit:enumeration>X8</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_7a7dde49</spirit:name>
      <spirit:enumeration>true</spirit:enumeration>
      <spirit:enumeration>false</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_82a7267c</spirit:name>
      <spirit:enumeration>Good</spirit:enumeration>
      <spirit:enumeration>Extreme</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ac75ef1e</spirit:name>
      <spirit:enumeration>Custom</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_b2f7e7f8</spirit:name>
      <spirit:enumeration>125</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_bed0e739</spirit:name>
      <spirit:enumeration>None</spirit:enumeration>
      <spirit:enumeration>VC709</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_c15e8c67</spirit:name>
      <spirit:enumeration>1</spirit:enumeration>
      <spirit:enumeration>2</spirit:enumeration>
      <spirit:enumeration>4</spirit:enumeration>
      <spirit:enumeration>8</spirit:enumeration>
      <spirit:enumeration>16</spirit:enumeration>
      <spirit:enumeration>32</spirit:enumeration>
      <spirit:enumeration>64</spirit:enumeration>
      <spirit:enumeration>128</spirit:enumeration>
      <spirit:enumeration>256</spirit:enumeration>
      <spirit:enumeration>512</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_c3d223d9</spirit:name>
      <spirit:enumeration>Memory</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_c63ab5b1</spirit:name>
      <spirit:enumeration>0</spirit:enumeration>
      <spirit:enumeration>1</spirit:enumeration>
      <spirit:enumeration>2</spirit:enumeration>
      <spirit:enumeration>3</spirit:enumeration>
      <spirit:enumeration>4</spirit:enumeration>
      <spirit:enumeration>5</spirit:enumeration>
      <spirit:enumeration>6</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_d123c74c</spirit:name>
      <spirit:enumeration>Bytes</spirit:enumeration>
      <spirit:enumeration>Kilobytes</spirit:enumeration>
      <spirit:enumeration>Megabytes</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_d85ad257</spirit:name>
      <spirit:enumeration>0</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_ec64e624</spirit:name>
      <spirit:enumeration>N/A</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_list_f1174048</spirit:name>
      <spirit:enumeration>NONE</spirit:enumeration>
      <spirit:enumeration>INTA</spirit:enumeration>
      <spirit:enumeration>INTB</spirit:enumeration>
      <spirit:enumeration>INTC</spirit:enumeration>
      <spirit:enumeration>INTD</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_0d200523</spirit:name>
      <spirit:enumeration spirit:text="00 Not Supported">00_Not_Supported</spirit:enumeration>
      <spirit:enumeration spirit:text="01 MSI only">01_MSI_only</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_11ed4471</spirit:name>
      <spirit:enumeration spirit:text="1 vector">1_vector</spirit:enumeration>
      <spirit:enumeration spirit:text="2 vectors">2_vectors</spirit:enumeration>
      <spirit:enumeration spirit:text="4 vectors">4_vectors</spirit:enumeration>
      <spirit:enumeration spirit:text="8 vectors">8_vectors</spirit:enumeration>
      <spirit:enumeration spirit:text="16 vectors">16_vectors</spirit:enumeration>
      <spirit:enumeration spirit:text="32 vectors">32_vectors</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_3f2631bf</spirit:name>
      <spirit:enumeration spirit:text="128 bytes">128_bytes</spirit:enumeration>
      <spirit:enumeration spirit:text="256 bytes">256_bytes</spirit:enumeration>
      <spirit:enumeration spirit:text="512 bytes">512_bytes</spirit:enumeration>
      <spirit:enumeration spirit:text="1024 bytes">1024_bytes</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_3fe73c5d</spirit:name>
      <spirit:enumeration spirit:text="BAR 0">BAR_0</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 1">0</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 1">BAR_1</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 2">1</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 2">BAR_2</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 3">2</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 3">BAR_3</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 4">3</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 4">BAR_4</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 5">4</spirit:enumeration>
      <spirit:enumeration spirit:text="BAR 5">BAR_5</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_49d248fb</spirit:name>
      <spirit:enumeration spirit:text="BAR 0">BAR_0</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_4b246358</spirit:name>
      <spirit:enumeration spirit:text="Wireless controller">Wireless_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Satellite communication controllers">Satellite_communication_controllers</spirit:enumeration>
      <spirit:enumeration spirit:text="Data acquisition and signal processing controllers">Data_acquisition_and_signal_processing_controllers</spirit:enumeration>
      <spirit:enumeration spirit:text="Intelligent I/O controllers">Intelligent_I/O_controllers</spirit:enumeration>
      <spirit:enumeration spirit:text="Docking stations">Docking_stations</spirit:enumeration>
      <spirit:enumeration spirit:text="Device was built before Class Code definitions were finalized">Device_was_built_before_Class_Code_definitions_were_finalized</spirit:enumeration>
      <spirit:enumeration spirit:text="Memory controller">Memory_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Simple communication controllers">Simple_communication_controllers</spirit:enumeration>
      <spirit:enumeration spirit:text="Serial bus controllers">Serial_bus_controllers</spirit:enumeration>
      <spirit:enumeration spirit:text="Encryption/Decryption controllers">Encryption/Decryption_controllers</spirit:enumeration>
      <spirit:enumeration spirit:text="Display controller">Display_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Multimedia device">Multimedia_device</spirit:enumeration>
      <spirit:enumeration spirit:text="Input devices">Input_devices</spirit:enumeration>
      <spirit:enumeration spirit:text="Mass storage controller">Mass_storage_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Processors">Processors</spirit:enumeration>
      <spirit:enumeration spirit:text="Device does not fit in any defined classes">Device_does_not_fit_in_any_defined_classes</spirit:enumeration>
      <spirit:enumeration spirit:text="Bridge device">Bridge_device</spirit:enumeration>
      <spirit:enumeration spirit:text="Network controller">Network_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Base system peripherals">Base_system_peripherals</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_503b93ee</spirit:name>
      <spirit:enumeration spirit:text="None">None</spirit:enumeration>
      <spirit:enumeration spirit:text="DWORD Aligned">DWORD_Aligned</spirit:enumeration>
      <spirit:enumeration spirit:text="Address Aligned">Address_Aligned</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_73c24b45</spirit:name>
      <spirit:enumeration spirit:text="No ASPM">No_ASPM</spirit:enumeration>
      <spirit:enumeration spirit:text="L0s Supported">L0s_Supported</spirit:enumeration>
      <spirit:enumeration spirit:text="L1 Supported">L1_Supported</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_7aed8f90</spirit:name>
      <spirit:enumeration spirit:text="None">None</spirit:enumeration>
      <spirit:enumeration spirit:text="Tandem PROM (Refer PG023)">Tandem_PROM (Refer PG023)</spirit:enumeration>
      <spirit:enumeration spirit:text="Tandem PCIe (Refer PG023)">Tandem_PCIe (Refer PG023)</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_8b05c234</spirit:name>
      <spirit:enumeration spirit:text="DWORD Aligned">DWORD_Aligned</spirit:enumeration>
      <spirit:enumeration spirit:text="Address Aligned">Address_Aligned</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_96d05a8d</spirit:name>
      <spirit:enumeration spirit:text="100 MHz">100_MHz</spirit:enumeration>
      <spirit:enumeration spirit:text="125 MHz">125_MHz</spirit:enumeration>
      <spirit:enumeration spirit:text="250 MHz">250_MHz</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_c1aac32d</spirit:name>
      <spirit:enumeration spirit:text="128 bit">128_bit</spirit:enumeration>
      <spirit:enumeration spirit:text="256 bit">256_bit</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_c5e787b3</spirit:name>
      <spirit:enumeration spirit:text="None">None</spirit:enumeration>
      <spirit:enumeration spirit:text="Enable External PIPE Interface">Enable_External_PIPE_Interface</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_c98117c0</spirit:name>
      <spirit:enumeration spirit:text="RAM">RAM</spirit:enumeration>
      <spirit:enumeration spirit:text="Other memory controller">Other_memory_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Flash">Flash</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_dc66c043</spirit:name>
      <spirit:enumeration spirit:text="PCI Express Endpoint device">PCI_Express_Endpoint_device</spirit:enumeration>
      <spirit:enumeration spirit:text="Legacy PCI Express Endpoint device">Legacy_PCI_Express_Endpoint_device</spirit:enumeration>
      <spirit:enumeration spirit:text="Root Port of PCI Express Root Complex">Root_Port_of_PCI_Express_Root_Complex</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_e13c2c7f</spirit:name>
      <spirit:enumeration spirit:text="Generic XT compatible serial controller">Generic_XT_compatible_serial_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="16450 compatible serial controller">16450_compatible_serial_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Parallel port">Parallel_port</spirit:enumeration>
      <spirit:enumeration spirit:text="IEEE 1284 controller">IEEE_1284_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Multiport serial controller">Multiport_serial_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="16650 compatible serial controller">16650_compatible_serial_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="IEEE 1284 target device">IEEE_1284_target_device</spirit:enumeration>
      <spirit:enumeration spirit:text="Hayes compatible modem with 16550 compatible interface">Hayes_compatible_modem_with_16550_compatible_interface</spirit:enumeration>
      <spirit:enumeration spirit:text="ECP 1.X compliant parallel port">ECP_1.X_compliant_parallel_port</spirit:enumeration>
      <spirit:enumeration spirit:text="16850 compatible serial controller">16850_compatible_serial_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Hayes compatible modem with 16750 compatible interface">Hayes_compatible_modem_with_16750_compatible_interface</spirit:enumeration>
      <spirit:enumeration spirit:text="Smart Card">Smart_Card</spirit:enumeration>
      <spirit:enumeration spirit:text="Bi directional parallel port">Bi_directional_parallel_port</spirit:enumeration>
      <spirit:enumeration spirit:text="Other communications device">Other_communications_device</spirit:enumeration>
      <spirit:enumeration spirit:text="GPIB(IEEE 488.1/2) controller">GPIB(IEEE_488.1/2)_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="16550 compatible serial controller">16550_compatible_serial_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Hayes compatible modem with 16450 compatible interface">Hayes_compatible_modem_with_16450_compatible_interface</spirit:enumeration>
      <spirit:enumeration spirit:text="16750 compatible serial controller">16750_compatible_serial_controller</spirit:enumeration>
      <spirit:enumeration spirit:text="Hayes compatible modem with 16650 compatible interface">Hayes_compatible_modem_with_16650_compatible_interface</spirit:enumeration>
      <spirit:enumeration spirit:text="Generic modem">Generic_modem</spirit:enumeration>
      <spirit:enumeration spirit:text="16950 compatible serial controller">16950_compatible_serial_controller</spirit:enumeration>
    </spirit:choice>
    <spirit:choice>
      <spirit:name>choice_pairs_f8a795d6</spirit:name>
      <spirit:enumeration spirit:text="2.5 GT/s">2.5_GT/s</spirit:enumeration>
      <spirit:enumeration spirit:text="5.0 GT/s">5.0_GT/s</spirit:enumeration>
      <spirit:enumeration spirit:text="8.0 GT/s">8.0_GT/s</spirit:enumeration>
    </spirit:choice>
  </spirit:choices>
  <spirit:fileSets>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsynthesis_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_tlp_tph_tbl_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_8k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_16k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_cpl.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_rep.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_rep_8k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_req.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_init_ctrl_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_pipe_lane.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_pipe_misc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_pipe_pipeline.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_force_adapt.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_clock.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_drp.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_eq.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_rate.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_reset.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_sync.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_user.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_wrapper.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_qpll_drp.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_qpll_reset.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_qpll_wrapper.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_rxeq_scan.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_gt_wrapper.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_gt_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_gt_common.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_gtx_cpllpd_ovrd.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip-PCIE_X0Y1.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>synth/ntps_top_axi_pcie3_0_0_pcie3_ip_ooc.xdc</spirit:name>
        <spirit:userFileType>xdc</spirit:userFileType>
        <spirit:userFileType>USED_IN_implementation</spirit:userFileType>
        <spirit:userFileType>USED_IN_out_of_context</spirit:userFileType>
        <spirit:userFileType>USED_IN_synthesis</spirit:userFileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsynthesiswrapper_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>synth/ntps_top_axi_pcie3_0_0_pcie3_ip.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogbehavioralsimulation_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_8k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_16k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_cpl.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_rep.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_rep_8k.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_bram_7vx_req.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_init_ctrl_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_pipe_lane.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_pipe_misc.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_pipe_pipeline.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_force_adapt.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_clock.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_drp.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_eq.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_rate.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_reset.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_sync.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_user.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pipe_wrapper.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_qpll_drp.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_qpll_reset.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_qpll_wrapper.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_rxeq_scan.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_gt_wrapper.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_gt_top.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_gt_common.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_gtx_cpllpd_ovrd.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_tlp_tph_tbl_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
      <spirit:file>
        <spirit:name>source/ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:exportedName>ntps_top_axi_pcie3_0_0_pcie3_ip_pcie_3_0_7vx</spirit:exportedName>
      </spirit:file>
    </spirit:fileSet>
    <spirit:fileSet>
      <spirit:name>xilinx_verilogsimulationwrapper_view_fileset</spirit:name>
      <spirit:file>
        <spirit:name>sim/ntps_top_axi_pcie3_0_0_pcie3_ip.v</spirit:name>
        <spirit:fileType>verilogSource</spirit:fileType>
        <spirit:logicalName>xil_defaultlib</spirit:logicalName>
      </spirit:file>
    </spirit:fileSet>
  </spirit:fileSets>
  <spirit:description>The Xilinx 7 Series Gen3 Integrated Block for PCI Express (1-lane, 2-lane, 4-lane, and 8-lane) in conjunction with flexible 7-Series architectural features such as integrated GTs (Gigabit Transceivers) and BRAM (Block RAMs) are used to implement a PCI Express Base Specification v3.0 compliant PCI Express Endpoint.</spirit:description>
  <spirit:parameters>
    <spirit:parameter>
      <spirit:name>device_port_type</spirit:name>
      <spirit:displayName>Device Port Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.device_port_type" spirit:choiceRef="choice_pairs_dc66c043" spirit:order="2">PCI_Express_Endpoint_device</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>xlnx_ref_board</spirit:name>
      <spirit:displayName>Xlnx Ref Board</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.xlnx_ref_board" spirit:choiceRef="choice_list_bed0e739" spirit:order="3">None</spirit:value>
      <spirit:vendorExtensions>
        <xilinx:parameterInfo>
          <xilinx:enablement>
            <xilinx:isEnabled xilinx:resolve="generated" xilinx:id="PARAM_ENABLEMENT.xlnx_ref_board">true</xilinx:isEnabled>
          </xilinx:enablement>
        </xilinx:parameterInfo>
      </spirit:vendorExtensions>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PL_LINK_CAP_MAX_LINK_SPEED</spirit:name>
      <spirit:displayName>Pl Link Cap Max Link Speed</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PL_LINK_CAP_MAX_LINK_SPEED" spirit:choiceRef="choice_pairs_f8a795d6" spirit:order="13">5.0_GT/s</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PL_LINK_CAP_MAX_LINK_WIDTH</spirit:name>
      <spirit:displayName>Pl Link Cap Max Link Width</spirit:displayName>
      <spirit:description>The Xilinx 7 Series Gen3 Integrated Block for PCI Expressification v3.0 compliant PCI Express Endpoint.</spirit:description>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH" spirit:choiceRef="choice_list_55451da8" spirit:order="12">X8</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>REF_CLK_FREQ</spirit:name>
      <spirit:displayName>Ref Clk Freq</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.REF_CLK_FREQ" spirit:choiceRef="choice_pairs_96d05a8d" spirit:order="9">100_MHz</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>AXISTEN_IF_RC_STRADDLE</spirit:name>
      <spirit:displayName>Axisten If Rc Straddle</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.AXISTEN_IF_RC_STRADDLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="16">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>axisten_if_enable_client_tag</spirit:name>
      <spirit:displayName>Disable Client Tag</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.axisten_if_enable_client_tag" spirit:choiceRef="choice_list_7a7dde49" spirit:order="15.5">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_AER_CAP_ECRC_CHECK_CAPABLE</spirit:name>
      <spirit:displayName>Pf0 Aer Cap Ecrc Check Capable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_AER_CAP_ECRC_CHECK_CAPABLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="273">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_AER_CAP_ECRC_GEN_CAPABLE</spirit:name>
      <spirit:displayName>Pf0 Aer Cap Ecrc Gen Capable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_AER_CAP_ECRC_GEN_CAPABLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="275">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_CLASS_CODE</spirit:name>
      <spirit:displayName>Pf0 Class Code</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_CLASS_CODE" spirit:order="34.3">058000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf0 Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEVICE_ID" spirit:order="25">7028</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT</spirit:name>
      <spirit:displayName>Pf0 Dev Cap2 128b Cas Atomic Completer Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP2_128B_CAS_ATOMIC_COMPLETER_SUPPORT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="262">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT</spirit:name>
      <spirit:displayName>Pf0 Dev Cap2 32b Atomic Completer Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP2_32B_ATOMIC_COMPLETER_SUPPORT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="260">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT</spirit:name>
      <spirit:displayName>Pf0 Dev Cap2 64b Atomic Completer Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP2_64B_ATOMIC_COMPLETER_SUPPORT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="261">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP2_OBFF_SUPPORT</spirit:name>
      <spirit:displayName>Pf0 Dev Cap2 Obff Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP2_OBFF_SUPPORT" spirit:choiceRef="choice_pairs_0d200523" spirit:order="264">00_Not_Supported</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT</spirit:name>
      <spirit:displayName>Pf0 Dev Cap2 Tph Completer Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP2_TPH_COMPLETER_SUPPORT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="263">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE</spirit:name>
      <spirit:displayName>Pf0 Dev Cap Function Level Reset Capable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_DEV_CAP_FUNCTION_LEVEL_RESET_CAPABLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="23">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_INTERRUPT_PIN</spirit:name>
      <spirit:displayName>Pf0 Interrupt Pin</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_INTERRUPT_PIN" spirit:choiceRef="choice_list_f1174048" spirit:order="167">INTA</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_LINK_STATUS_SLOT_CLOCK_CONFIG</spirit:name>
      <spirit:displayName>Pf0 Link Status Slot Clock Config</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_LINK_STATUS_SLOT_CLOCK_CONFIG" spirit:choiceRef="choice_list_7a7dde49" spirit:order="10">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_pairs_49d248fb" spirit:order="219">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_PBA_OFFSET" spirit:order="218">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_pairs_49d248fb" spirit:order="217">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_TABLE_OFFSET" spirit:order="216">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Pf0 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSIX_CAP_TABLE_SIZE" spirit:order="215">000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Pf0 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_pairs_11ed4471" spirit:order="205">1_vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_PM_CAP_PMESUPPORT_D1</spirit:name>
      <spirit:displayName>Pf0 Pm Cap Pmesupport D1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D1" spirit:choiceRef="choice_list_7a7dde49" spirit:order="258">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_PM_CAP_PMESUPPORT_D3HOT</spirit:name>
      <spirit:displayName>Pf0 Pm Cap Pmesupport D3hot</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D3HOT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="259">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_PM_CAP_SUPP_D1_STATE</spirit:name>
      <spirit:displayName>Pf0 Pm Cap Supp D1 State</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_PM_CAP_SUPP_D1_STATE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="256">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_REVISION_ID</spirit:name>
      <spirit:displayName>Pf0 Revision Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_REVISION_ID" spirit:order="26">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_CAP_INITIAL_VF</spirit:name>
      <spirit:displayName>Pf0 Sriov Cap Initial Vf</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_CAP_INITIAL_VF" spirit:choiceRef="choice_list_c63ab5b1" spirit:order="121">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_FIRST_VF_OFFSET</spirit:name>
      <spirit:displayName>Pf0 Sriov First Vf Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_FIRST_VF_OFFSET" spirit:order="123">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_FUNC_DEP_LINK</spirit:name>
      <spirit:displayName>Pf0 Sriov Func Dep Link</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_FUNC_DEP_LINK" spirit:order="122">0000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
      <spirit:displayName>Pf0 Sriov Supported Page Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_SUPPORTED_PAGE_SIZE" spirit:order="125">00000553</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SRIOV_VF_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf0 Sriov Vf Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SRIOV_VF_DEVICE_ID" spirit:order="124">0000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SUBSYSTEM_ID</spirit:name>
      <spirit:displayName>Pf0 Subsystem Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SUBSYSTEM_ID" spirit:order="28">0007</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_AER_CAP_ECRC_CHECK_CAPABLE</spirit:name>
      <spirit:displayName>Pf1 Aer Cap Ecrc Check Capable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_AER_CAP_ECRC_CHECK_CAPABLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="274">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_AER_CAP_ECRC_GEN_CAPABLE</spirit:name>
      <spirit:displayName>Pf1 Aer Cap Ecrc Gen Capable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_AER_CAP_ECRC_GEN_CAPABLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="276">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_CLASS_CODE</spirit:name>
      <spirit:displayName>Pf1 Class Code</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_CLASS_CODE" spirit:order="43.3">058000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf1 Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_DEVICE_ID" spirit:order="35">7011</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_INTERRUPT_PIN</spirit:name>
      <spirit:displayName>Pf1 Interrupt Pin</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_INTERRUPT_PIN" spirit:choiceRef="choice_list_f1174048" spirit:order="203">NONE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_pairs_49d248fb" spirit:order="225">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_pairs_49d248fb" spirit:order="223">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_TABLE_SIZE" spirit:order="221">000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_TABLE_OFFSET" spirit:order="222">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Pf1 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSIX_CAP_PBA_OFFSET" spirit:order="224">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Pf1 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_pairs_11ed4471" spirit:order="207">1_vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_REVISION_ID</spirit:name>
      <spirit:displayName>Pf1 Revision Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_REVISION_ID" spirit:order="36">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_CAP_INITIAL_VF</spirit:name>
      <spirit:displayName>Pf1 Sriov Cap Initial Vf</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_CAP_INITIAL_VF" spirit:choiceRef="choice_list_d85ad257" spirit:order="127">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_CAP_VER</spirit:name>
      <spirit:displayName>Pf1 Sriov Cap Ver</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_CAP_VER" spirit:order="126">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_FIRST_VF_OFFSET</spirit:name>
      <spirit:displayName>Pf1 Sriov First Vf Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_FIRST_VF_OFFSET" spirit:order="129">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_FUNC_DEP_LINK</spirit:name>
      <spirit:displayName>Pf1 Sriov Func Dep Link</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_FUNC_DEP_LINK" spirit:order="128">0001</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_SUPPORTED_PAGE_SIZE</spirit:name>
      <spirit:displayName>Pf1 Sriov Supported Page Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_SUPPORTED_PAGE_SIZE" spirit:order="131">00000553</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SRIOV_VF_DEVICE_ID</spirit:name>
      <spirit:displayName>Pf1 Sriov Vf Device Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SRIOV_VF_DEVICE_ID" spirit:order="130">0000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_SUBSYSTEM_ID</spirit:name>
      <spirit:displayName>Pf1 Subsystem Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_SUBSYSTEM_ID" spirit:order="37">0007</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>tl_pf0_enable_reg</spirit:name>
      <spirit:displayName>Tl Pf0 Enable Reg</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.tl_pf0_enable_reg" spirit:choiceRef="choice_list_7a7dde49" spirit:order="17">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>TL_PF_ENABLE_REG</spirit:name>
      <spirit:displayName>Tl Pf Enable Reg</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.TL_PF_ENABLE_REG" spirit:choiceRef="choice_list_7a7dde49" spirit:order="18">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>SRIOV_CAP_ENABLE</spirit:name>
      <spirit:displayName>Sriov Cap Enable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.SRIOV_CAP_ENABLE" spirit:choiceRef="choice_list_7a7dde49" spirit:order="22">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF0_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Vf0 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF0_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="230">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF0_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Vf0 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF0_MSIX_CAP_PBA_OFFSET" spirit:order="229">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF0_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Vf0 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF0_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="228">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF0_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Vf0 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF0_MSIX_CAP_TABLE_OFFSET" spirit:order="227">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF0_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Vf0 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF0_MSIX_CAP_TABLE_SIZE" spirit:order="226">000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF0_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Vf0 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF0_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_pairs_11ed4471" spirit:order="208">1_vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF1_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Vf1 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF1_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="235">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF1_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Vf1 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF1_MSIX_CAP_PBA_OFFSET" spirit:order="234">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF1_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Vf1 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF1_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="233">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF1_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Vf1 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF1_MSIX_CAP_TABLE_OFFSET" spirit:order="232">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF1_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Vf1 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF1_MSIX_CAP_TABLE_SIZE" spirit:order="231">000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF1_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Vf1 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF1_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_pairs_11ed4471" spirit:order="209">1_vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF2_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Vf2 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF2_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="240">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF2_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Vf2 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF2_MSIX_CAP_PBA_OFFSET" spirit:order="239">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF2_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Vf2 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF2_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="238">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF2_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Vf2 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF2_MSIX_CAP_TABLE_OFFSET" spirit:order="237">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF2_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Vf2 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF2_MSIX_CAP_TABLE_SIZE" spirit:order="236">000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF2_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Vf2 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF2_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_pairs_11ed4471" spirit:order="210">1_vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF3_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Vf3 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF3_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="245">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF3_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Vf3 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF3_MSIX_CAP_PBA_OFFSET" spirit:order="244">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF3_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Vf3 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF3_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="243">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF3_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Vf3 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF3_MSIX_CAP_TABLE_OFFSET" spirit:order="242">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF3_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Vf3 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF3_MSIX_CAP_TABLE_SIZE" spirit:order="241">000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF3_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Vf3 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF3_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_pairs_11ed4471" spirit:order="211">1_vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF4_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Vf4 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF4_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="250">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF4_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Vf4 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF4_MSIX_CAP_PBA_OFFSET" spirit:order="249">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF4_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Vf4 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF4_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="248">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF4_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Vf4 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF4_MSIX_CAP_TABLE_OFFSET" spirit:order="247">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF4_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Vf4 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF4_MSIX_CAP_TABLE_SIZE" spirit:order="246">000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF4_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Vf4 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF4_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_pairs_11ed4471" spirit:order="212">1_vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF5_MSIX_CAP_PBA_BIR</spirit:name>
      <spirit:displayName>Vf5 Msix Cap Pba Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF5_MSIX_CAP_PBA_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="255">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF5_MSIX_CAP_PBA_OFFSET</spirit:name>
      <spirit:displayName>Vf5 Msix Cap Pba Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF5_MSIX_CAP_PBA_OFFSET" spirit:order="254">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF5_MSIX_CAP_TABLE_BIR</spirit:name>
      <spirit:displayName>Vf5 Msix Cap Table Bir</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF5_MSIX_CAP_TABLE_BIR" spirit:choiceRef="choice_pairs_3fe73c5d" spirit:order="253">BAR_0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF5_MSIX_CAP_TABLE_OFFSET</spirit:name>
      <spirit:displayName>Vf5 Msix Cap Table Offset</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF5_MSIX_CAP_TABLE_OFFSET" spirit:order="252">00000000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF5_MSIX_CAP_TABLE_SIZE</spirit:name>
      <spirit:displayName>Vf5 Msix Cap Table Size</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF5_MSIX_CAP_TABLE_SIZE" spirit:order="251">000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>VF5_MSI_CAP_MULTIMSGCAP</spirit:name>
      <spirit:displayName>Vf5 Msi Cap Multimsgcap</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.VF5_MSI_CAP_MULTIMSGCAP" spirit:choiceRef="choice_pairs_11ed4471" spirit:order="213">1_vector</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>Component_Name</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.Component_Name" spirit:order="1">ntps_top_axi_pcie3_0_0_pcie3_ip</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_Use_Class_Code_Lookup_Assistant</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_Use_Class_Code_Lookup_Assistant" spirit:choiceRef="choice_list_7a7dde49" spirit:order="27.9">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF1_Use_Class_Code_Lookup_Assistant</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF1_Use_Class_Code_Lookup_Assistant" spirit:choiceRef="choice_list_7a7dde49" spirit:order="28.9">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_PM_CAP_PMESUPPORT_D0</spirit:name>
      <spirit:displayName>Pf0 Pm Cap Pmesupport D0</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_PM_CAP_PMESUPPORT_D0" spirit:choiceRef="choice_list_7a7dde49" spirit:order="257">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>PF0_SUBSYSTEM_VENDOR_ID</spirit:name>
      <spirit:displayName>Pf0 Subsystem Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.PF0_SUBSYSTEM_VENDOR_ID" spirit:order="27">10EE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="201">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_class_code_sub</spirit:name>
      <spirit:displayName>Pf0 Class Code Sub</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_class_code_sub" spirit:order="34.1">80</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="193">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_vc_cap_enabled</spirit:name>
      <spirit:displayName>Pf0 Vc Cap Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_vc_cap_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="268">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="199">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="168">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="162">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pcie_blk_locn</spirit:name>
      <spirit:displayName>Pcie Blk Locn</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pcie_blk_locn" spirit:choiceRef="choice_list_2d5c670f" spirit:order="4">X0Y1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="140">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_class_code_base</spirit:name>
      <spirit:displayName>Pf1 Class Code Base</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_class_code_base" spirit:order="42.1">05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="189">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_pb_enabled</spirit:name>
      <spirit:displayName>Pf0 Pb Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_pb_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="281">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="170">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_type</spirit:name>
      <spirit:displayName>Pf1 Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="101">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="94">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_type</spirit:name>
      <spirit:displayName>Pf1 Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="95">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="96">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="97">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_scale</spirit:name>
      <spirit:displayName>Pf1 Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="98">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar2_size</spirit:name>
      <spirit:displayName>Pf1 Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar2_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="99">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_class_code_interface</spirit:name>
      <spirit:displayName>Pf0 Class Code Interface</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_class_code_interface" spirit:order="34.2">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="142">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_type</spirit:name>
      <spirit:displayName>Pf1 Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="107">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_base_class_menu</spirit:name>
      <spirit:displayName>Pf0 Base Class Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_base_class_menu" spirit:choiceRef="choice_pairs_4b246358" spirit:order="33">Simple_communication_controllers</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sub_class_interface_menu</spirit:name>
      <spirit:displayName>Pf0 Sub Class Interface Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sub_class_interface_menu" spirit:choiceRef="choice_pairs_e13c2c7f" spirit:order="34">Generic_XT_compatible_serial_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="172">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_expansion_rom_enabled</spirit:name>
      <spirit:displayName>Pf1 Expansion Rom Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_expansion_rom_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="117">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="132">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="171">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_type</spirit:name>
      <spirit:displayName>Pf1 Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="113">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="164">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="174">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_class_code_interface</spirit:name>
      <spirit:displayName>Pf1 Class Code Interface</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_class_code_interface" spirit:order="43.2">00</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="146">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_msix_enabled</spirit:name>
      <spirit:displayName>Pf1 Msix Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_msix_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="220">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="114">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_rbar_enabled</spirit:name>
      <spirit:displayName>Pf0 Rbar Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_rbar_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="279">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_pb_enabled</spirit:name>
      <spirit:displayName>Pf1 Pb Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_pb_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="282">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="176">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="102">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="147">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="100">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="148">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="178">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_scale</spirit:name>
      <spirit:displayName>Pf1 Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="104">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="138">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>alignment_mode</spirit:name>
      <spirit:displayName>Alignment Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.alignment_mode" spirit:choiceRef="choice_pairs_8b05c234" spirit:order="15">Address_Aligned</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="195">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>silicon_rev</spirit:name>
      <spirit:displayName>Silicon Rev</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.silicon_rev" spirit:choiceRef="choice_list_4c5a0909" spirit:order="292">Production</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="180">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="152">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="137">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="182">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="108">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="143">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="44">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_type</spirit:name>
      <spirit:displayName>Pf0 Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="45">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="46">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="47">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_scale</spirit:name>
      <spirit:displayName>Pf0 Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="48">Megabytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar0_size</spirit:name>
      <spirit:displayName>Pf0 Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar0_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="49">1</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="50">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_type</spirit:name>
      <spirit:displayName>Pf0 Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="51">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="52">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="53">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_scale</spirit:name>
      <spirit:displayName>Pf0 Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="54">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar1_size</spirit:name>
      <spirit:displayName>Pf0 Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar1_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="55">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="56">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_type</spirit:name>
      <spirit:displayName>Pf0 Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="57">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar2 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="58">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="59">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_scale</spirit:name>
      <spirit:displayName>Pf0 Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="60">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar2_size</spirit:name>
      <spirit:displayName>Pf0 Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar2_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="61">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="62">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_type</spirit:name>
      <spirit:displayName>Pf0 Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="63">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="64">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="65">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_scale</spirit:name>
      <spirit:displayName>Pf0 Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="66">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar3_size</spirit:name>
      <spirit:displayName>Pf0 Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar3_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="67">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="68">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_type</spirit:name>
      <spirit:displayName>Pf0 Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="69">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_64bit</spirit:name>
      <spirit:displayName>Pf0 Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="70">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="71">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_scale</spirit:name>
      <spirit:displayName>Pf0 Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="72">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar4_size</spirit:name>
      <spirit:displayName>Pf0 Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar4_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="73">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_enabled</spirit:name>
      <spirit:displayName>Pf0 Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="74">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_type</spirit:name>
      <spirit:displayName>Pf0 Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="75">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="76">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_scale</spirit:name>
      <spirit:displayName>Pf0 Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="77">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_bar5_size</spirit:name>
      <spirit:displayName>Pf0 Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_bar5_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="78">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="154">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="106">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="177">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="149">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="184">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_scale</spirit:name>
      <spirit:displayName>Pf1 Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="110">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="155">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="144">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_dev_cap_max_payload</spirit:name>
      <spirit:displayName>Pf0 Dev Cap Max Payload</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_dev_cap_max_payload" spirit:choiceRef="choice_pairs_3f2631bf" spirit:order="19">512_bytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y0</spirit:name>
      <spirit:displayName>Gen X0y0</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y0" spirit:choiceRef="choice_list_7a7dde49" spirit:order="5">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="161">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y1</spirit:name>
      <spirit:displayName>Gen X0y1</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y1" spirit:choiceRef="choice_list_7a7dde49" spirit:order="6">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y2</spirit:name>
      <spirit:displayName>Gen X0y2</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y2" spirit:choiceRef="choice_list_7a7dde49" spirit:order="7">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>gen_x0y3</spirit:name>
      <spirit:displayName>Gen X0y3</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.gen_x0y3" spirit:choiceRef="choice_list_7a7dde49" spirit:order="8">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_expansion_rom_scale</spirit:name>
      <spirit:displayName>Pf1 Expansion Rom Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_expansion_rom_scale" spirit:choiceRef="choice_list_d123c74c" spirit:order="118">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_expansion_rom_size</spirit:name>
      <spirit:displayName>Pf1 Expansion Rom Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_expansion_rom_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="119">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_rbar_enabled</spirit:name>
      <spirit:displayName>Pf1 Rbar Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_rbar_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="280">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_tphr_enable</spirit:name>
      <spirit:displayName>Pf1 Tphr Enable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_tphr_enable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="285">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="186">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="158">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_size</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="166">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="153">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="188">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_expansion_rom_enabled</spirit:name>
      <spirit:displayName>Pf0 Expansion Rom Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_expansion_rom_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="79">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="160">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_base_class_menu</spirit:name>
      <spirit:displayName>Pf1 Base Class Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_base_class_menu" spirit:choiceRef="choice_pairs_4b246358" spirit:order="42">Memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sub_class_interface_menu</spirit:name>
      <spirit:displayName>Pf1 Sub Class Interface Menu</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sub_class_interface_menu" spirit:choiceRef="choice_pairs_c98117c0" spirit:order="43">Other_memory_controller</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="133">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="112">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar3 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="103">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="173">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="190">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_scale</spirit:name>
      <spirit:displayName>Pf1 Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="115">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_class_code_sub</spirit:name>
      <spirit:displayName>Pf1 Class Code Sub</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_class_code_sub" spirit:order="43.1">80</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>extended_tag_field</spirit:name>
      <spirit:displayName>Extended Tag Field</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.extended_tag_field" spirit:choiceRef="choice_list_7a7dde49" spirit:order="21">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="139">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="135">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_expansion_rom_scale</spirit:name>
      <spirit:displayName>Pf0 Expansion Rom Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_expansion_rom_scale" spirit:choiceRef="choice_list_d123c74c" spirit:order="80">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_expansion_rom_size</spirit:name>
      <spirit:displayName>Pf0 Expansion Rom Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_expansion_rom_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="81">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="179">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_ari_enabled</spirit:name>
      <spirit:displayName>Pf1 Ari Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_ari_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="278">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="150">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="200">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar2_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar2_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="145">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>vendor_id</spirit:name>
      <spirit:displayName>Vendor Id</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.vendor_id" spirit:order="24">10EE</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_tphr_enable</spirit:name>
      <spirit:displayName>Pf0 Tphr Enable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_tphr_enable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="284">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="185">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar3_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="151">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="191">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar0 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="82">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_type</spirit:name>
      <spirit:displayName>Pf1 Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="83">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="84">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar0 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="85">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_scale</spirit:name>
      <spirit:displayName>Pf1 Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="86">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar0_size</spirit:name>
      <spirit:displayName>Pf1 Bar0 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar0_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="87">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_enabled</spirit:name>
      <spirit:displayName>Pf1 Bar1 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="88">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_type</spirit:name>
      <spirit:displayName>Pf1 Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="89">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_64bit</spirit:name>
      <spirit:displayName>Pf1 Bar1 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="90">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="91">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_scale</spirit:name>
      <spirit:displayName>Pf1 Bar1 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="92">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar1_size</spirit:name>
      <spirit:displayName>Pf1 Bar1 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar1_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="93">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="192">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_aer_enabled</spirit:name>
      <spirit:displayName>Pf1 Aer Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_aer_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="272">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_dsn_enabled</spirit:name>
      <spirit:displayName>Pf1 Dsn Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_dsn_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="267">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="157">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_64bit</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="194">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="183">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_cap_ver</spirit:name>
      <spirit:displayName>Pf0 Sriov Cap Ver</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_cap_ver" spirit:order="120">0</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="197">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_msi_enabled</spirit:name>
      <spirit:displayName>Pf1 Msi Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_msi_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="206">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="165">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_dpa_enabled</spirit:name>
      <spirit:displayName>Pf1 Dpa Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_dpa_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="270">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar5_type</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar5 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar5_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="163">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>ext_pcie_cfg_space_enabled</spirit:name>
      <spirit:displayName>Ext Pcie Cfg Space Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.ext_pcie_cfg_space_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="286">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar4_scale</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar4 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar4_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="196">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_size</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="202">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_ari_enabled</spirit:name>
      <spirit:displayName>Pf0 Ari Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_ari_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="277">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>perf_level</spirit:name>
      <spirit:displayName>Perf Level</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.perf_level" spirit:choiceRef="choice_list_82a7267c" spirit:order="265">Extreme</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_class_code_base</spirit:name>
      <spirit:displayName>Pf0 Class Code Base</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_class_code_base" spirit:order="33.1">05</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>axisten_if_width</spirit:name>
      <spirit:displayName>Axisten If Width</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.axisten_if_width" spirit:choiceRef="choice_pairs_c1aac32d" spirit:order="14">256_bit</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_enabled</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="156">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar0_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar0 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar0_type" spirit:choiceRef="choice_list_c3d223d9" spirit:order="169">Memory</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar3_size</spirit:name>
      <spirit:displayName>Pf1 Bar3 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar3_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="105">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="159">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_aer_enabled</spirit:name>
      <spirit:displayName>Pf0 Aer Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_aer_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="271">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_dsn_enabled</spirit:name>
      <spirit:displayName>Pf0 Dsn Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_dsn_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="266">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar1_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar1 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar1_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="175">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_64bit</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 64bit</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_64bit" spirit:choiceRef="choice_list_7a7dde49" spirit:order="134">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_size</spirit:name>
      <spirit:displayName>Pf1 Bar4 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="111">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_msi_enabled</spirit:name>
      <spirit:displayName>Pf0 Msi Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_msi_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="204">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar5_enabled</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar5 Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar5_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="198">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_dpa_enabled</spirit:name>
      <spirit:displayName>Pf0 Dpa Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_dpa_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="269">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar2_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar2 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar2_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="181">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_msix_enabled</spirit:name>
      <spirit:displayName>Pf0 Msix Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_msix_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="214">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar5_size</spirit:name>
      <spirit:displayName>Pf1 Bar5 Size</spirit:displayName>
      <spirit:value spirit:format="long" spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar5_size" spirit:choiceRef="choice_list_c15e8c67" spirit:order="116">2</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_bar4_prefetchable</spirit:name>
      <spirit:displayName>Pf1 Bar4 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_bar4_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="109">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar0_scale</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar0 Scale</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar0_scale" spirit:choiceRef="choice_list_52d29139" spirit:order="136">Kilobytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_dev_cap_max_payload</spirit:name>
      <spirit:displayName>Pf1 Dev Cap Max Payload</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_dev_cap_max_payload" spirit:choiceRef="choice_pairs_3f2631bf" spirit:order="20">512_bytes</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_sriov_bar1_prefetchable</spirit:name>
      <spirit:displayName>Pf0 Sriov Bar1 Prefetchable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_sriov_bar1_prefetchable" spirit:choiceRef="choice_list_7a7dde49" spirit:order="141">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf1_sriov_bar3_type</spirit:name>
      <spirit:displayName>Pf1 Sriov Bar3 Type</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf1_sriov_bar3_type" spirit:choiceRef="choice_list_ec64e624" spirit:order="187">N/A</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pf0_ltr_enabled</spirit:name>
      <spirit:displayName>Pf0 Ltr Enabled</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pf0_ltr_enabled" spirit:choiceRef="choice_list_7a7dde49" spirit:order="283">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>mode_selection</spirit:name>
      <spirit:displayName>Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.mode_selection" spirit:choiceRef="choice_list_24b724fb" spirit:order="293">Advanced</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pipe_sim</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.pipe_sim" spirit:order="294">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>shared_logic_in_core</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.shared_logic_in_core" spirit:order="302">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_ext_clk</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_ext_clk" spirit:order="295">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_ext_gt_common</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_ext_gt_common" spirit:order="299">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_ext_ch_gt_drp</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_ext_ch_gt_drp" spirit:order="300">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_transceiver_status_ports</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_transceiver_status_ports" spirit:order="301">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>tx_fc_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.tx_fc_if" spirit:order="311">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_fc_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_fc_if" spirit:order="303">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_ext_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_ext_if" spirit:order="304">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_status_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_status_if" spirit:order="305">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>per_func_status_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.per_func_status_if" spirit:order="306">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_mgmt_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_mgmt_if" spirit:order="307">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>rcv_msg_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.rcv_msg_if" spirit:order="308">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_tx_msg_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_tx_msg_if" spirit:order="309">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cfg_ctl_if</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.cfg_ctl_if" spirit:order="310">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_pcie_drp</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_pcie_drp" spirit:order="314">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_ext_pipe_interface</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_ext_pipe_interface" spirit:order="316">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_msi_per_vec_masking</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_msi_per_vec_masking" spirit:order="296">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_ext_startup</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_ext_startup" spirit:order="315">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>tandem_mode</spirit:name>
      <spirit:displayName>Tandem Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.tandem_mode" spirit:choiceRef="choice_pairs_7aed8f90" spirit:order="11">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>axisten_freq</spirit:name>
      <spirit:displayName>AXISTEN IF FREQ</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.axisten_freq" spirit:choiceRef="choice_list_b2f7e7f8" spirit:order="297">125</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>aspm_support</spirit:name>
      <spirit:displayName>ASPM Support</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.aspm_support" spirit:choiceRef="choice_pairs_73c24b45" spirit:order="298">No_ASPM</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>USE_BOARD_FLOW</spirit:name>
      <spirit:displayName>Generate Board based IO Constraints</spirit:displayName>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.USE_BOARD_FLOW" spirit:order="312">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>RESET_BOARD_INTERFACE</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.RESET_BOARD_INTERFACE" spirit:choiceRef="choice_list_ac75ef1e" spirit:order="313">Custom</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>SRIOV_CAP_ENABLE_EXT</spirit:name>
      <spirit:displayName>SRIOV Cap Enable</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.SRIOV_CAP_ENABLE_EXT" spirit:choiceRef="choice_list_7a7dde49" spirit:order="287">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>axisten_if_enable_msg_route</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.axisten_if_enable_msg_route" spirit:order="317">20000</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>axisten_if_enable_rx_msg_intfc</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.axisten_if_enable_rx_msg_intfc" spirit:choiceRef="choice_list_7a7dde49" spirit:order="318">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>pipe_mode_sim</spirit:name>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.pipe_mode_sim" spirit:choiceRef="choice_pairs_c5e787b3" spirit:order="293.5">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>en_powerdown</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.en_powerdown" spirit:order="319">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>performance</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.performance" spirit:order="320">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>cc_cq_alignment</spirit:name>
      <spirit:displayName>CC CQ Alignment Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.cc_cq_alignment" spirit:choiceRef="choice_pairs_503b93ee" spirit:order="334">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>rc_rq_alignment</spirit:name>
      <spirit:displayName>CC CQ Alignment Mode</spirit:displayName>
      <spirit:value spirit:resolve="user" spirit:id="PARAM_VALUE.rc_rq_alignment" spirit:choiceRef="choice_pairs_503b93ee" spirit:order="335">None</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>enable_jtag_dbg</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.enable_jtag_dbg" spirit:order="336">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>mult_pf_des</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.mult_pf_des" spirit:order="337">true</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>win10_interop</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.win10_interop" spirit:order="338">false</spirit:value>
    </spirit:parameter>
    <spirit:parameter>
      <spirit:name>axisten_if_enable_msg_route_override</spirit:name>
      <spirit:value spirit:format="bool" spirit:resolve="user" spirit:id="PARAM_VALUE.axisten_if_enable_msg_route_override" spirit:order="339">true</spirit:value>
    </spirit:parameter>
  </spirit:parameters>
  <spirit:vendorExtensions>
    <xilinx:coreExtensions>
      <xilinx:displayName>Virtex-7 FPGA Gen3 Integrated Block for PCI Express</xilinx:displayName>
      <xilinx:xpmLibraries>
        <xilinx:xpmLibrary>XPM_MEMORY</xilinx:xpmLibrary>
        <xilinx:xpmLibrary>XPM_CDC</xilinx:xpmLibrary>
      </xilinx:xpmLibraries>
      <xilinx:coreRevision>6</xilinx:coreRevision>
      <xilinx:configElementInfos>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_CQ.HAS_TKEEP" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_CQ.HAS_TLAST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_CQ.HAS_TREADY" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_CQ.HAS_TSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_CQ.TDATA_NUM_BYTES" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_CQ.TDEST_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_CQ.TID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_CQ.TUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RC.HAS_TKEEP" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RC.HAS_TLAST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RC.HAS_TREADY" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RC.HAS_TSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RC.TDATA_NUM_BYTES" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RC.TDEST_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RC.TID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.M_AXIS_RC.TUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_CC.HAS_TKEEP" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_CC.HAS_TLAST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_CC.HAS_TREADY" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_CC.HAS_TSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_CC.TDATA_NUM_BYTES" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_CC.TDEST_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_CC.TID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_CC.TUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_RQ.HAS_TKEEP" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_RQ.HAS_TLAST" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_RQ.HAS_TREADY" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_RQ.HAS_TSTRB" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_RQ.TDATA_NUM_BYTES" xilinx:valueSource="auto"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_RQ.TDEST_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_RQ.TID_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="BUSIFPARAM_VALUE.S_AXIS_RQ.TUSER_WIDTH" xilinx:valueSource="constant"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_CLASS_CODE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_DEVICE_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_INTERRUPT_PIN" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_LINK_STATUS_SLOT_CLOCK_CONFIG" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_PBA_BIR" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_PBA_OFFSET" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_TABLE_BIR" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_TABLE_OFFSET" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSIX_CAP_TABLE_SIZE" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_MSI_CAP_MULTIMSGCAP" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_REVISION_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_SUBSYSTEM_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PF0_SUBSYSTEM_VENDOR_ID" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PL_LINK_CAP_MAX_LINK_SPEED" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.PL_LINK_CAP_MAX_LINK_WIDTH" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.REF_CLK_FREQ" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.alignment_mode" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.axisten_freq" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.axisten_if_enable_client_tag" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.axisten_if_enable_msg_route" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.axisten_if_enable_msg_route_override" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.axisten_if_enable_rx_msg_intfc" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.axisten_if_width" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.cfg_ext_if" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.device_port_type" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_ext_ch_gt_drp" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_ext_clk" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_ext_gt_common" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_ext_pipe_interface" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_ext_startup" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_pcie_drp" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.en_transceiver_status_ports" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.enable_jtag_dbg" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.ext_pcie_cfg_space_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.mode_selection" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pcie_blk_locn" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_64bit" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_prefetchable" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_scale" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_size" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar0_type" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar1_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar2_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar3_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar4_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_bar5_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_base_class_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_class_code_base" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_class_code_interface" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_class_code_sub" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_msi_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_msix_enabled" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.pf0_sub_class_interface_menu" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.shared_logic_in_core" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.vendor_id" xilinx:valueSource="propagated"/>
        <xilinx:configElementInfo xilinx:referenceId="PARAM_VALUE.xlnx_ref_board" xilinx:valueSource="propagated"/>
      </xilinx:configElementInfos>
    </xilinx:coreExtensions>
    <xilinx:packagingInfo>
      <xilinx:xilinxVersion>2019.2</xilinx:xilinxVersion>
      <xilinx:checksum xilinx:scope="busInterfaces" xilinx:value="fa688b5d"/>
      <xilinx:checksum xilinx:scope="fileGroups" xilinx:value="b81139fc"/>
      <xilinx:checksum xilinx:scope="ports" xilinx:value="dad5bf2a"/>
      <xilinx:checksum xilinx:scope="hdlParameters" xilinx:value="4d85d73a"/>
      <xilinx:checksum xilinx:scope="parameters" xilinx:value="964285a8"/>
    </xilinx:packagingInfo>
  </spirit:vendorExtensions>
</spirit:component>
